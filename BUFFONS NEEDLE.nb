(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    244149,       4520]
NotebookOptionsPosition[    240625,       4461]
NotebookOutlinePosition[    241055,       4478]
CellTagsIndexPosition[    241012,       4475]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["\nBuffon[NumberOfNeedles, NeedleSize, SurfaceDimension, GridWidth, \
Show \[Rule] True/ Parallelize]\ne.g: Buffon[35,2,20,3,Show\[Rule]True]\n\n\
Options:\nShow\[Rule]...\nTrue: Everything \nParallelize: Pi Estimation using \
Parallelization ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["(fastest)\n\n",
  FontColor->RGBColor[1, 0, 0]],
 "\n",
 StyleBox["Kernels: Optional for even better parallelization\nLaunch amount \
of Logical CPU Cores (usually twice the physical cores/check in task manager)",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.8737866749206457`*^9, 3.873786793575352*^9}, {
   3.873788853503797*^9, 3.8737888651816726`*^9}, {3.8737889289443636`*^9, 
   3.873789009905733*^9}, {3.873789083789266*^9, 3.873789131998787*^9}, {
   3.873789212859447*^9, 3.873789216859408*^9}, {3.8737894879667106`*^9, 
   3.873789519656388*^9}, {3.8737904414538317`*^9, 3.873790442702907*^9}, {
   3.87379054716157*^9, 3.873790552220831*^9}, {3.87379071414284*^9, 
   3.873790832532475*^9}, 3.873790902862149*^9, {3.873790947809015*^9, 
   3.873791033986312*^9}, {3.8737910763527412`*^9, 3.873791103680581*^9}, {
   3.8737914858319826`*^9, 3.873791524900659*^9}, 3.873791572364799*^9, {
   3.874646683649423*^9, 3.8746466902304635`*^9}, 3.8746472675303*^9, {
   3.874732975623501*^9, 3.8747329847238646`*^9}, {3.874733179944049*^9, 
   3.874733205591061*^9}, {3.874733250316825*^9, 3.8747332750013933`*^9}, {
   3.874733308773947*^9, 3.874733360471313*^9}, {3.930735315037013*^9, 
   3.9307353151885233`*^9}},ExpressionUUID->"c3db90d2-148d-488a-ab73-\
d5ab84690e11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"launch", "[", "LogicalCores_", "]"}], ":=", 
  RowBox[{"Quiet", "@", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"LogicalCores", ">", "8"}], ",", 
     RowBox[{"Print", "[", "\"\<Input Maximum of 8\>\"", "]"}], ",", 
     RowBox[{"$KernelCount", "==", "8"}], ",", 
     RowBox[{"Print", "[", "\"\<Done\>\"", "]"}], ",", 
     RowBox[{"$KernelCount", "!=", "0"}], ",", 
     RowBox[{
      RowBox[{"LaunchKernels", "[", 
       RowBox[{"LogicalCores", "-", "$KernelCount"}], "]"}], ";", 
      RowBox[{"Print", "[", "\"\<Done\>\"", "]"}]}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"$KernelCount", "==", "0"}], "]"}], ",", 
     RowBox[{
      RowBox[{"LaunchKernels", "[", "LogicalCores", "]"}], ";", 
      RowBox[{"Print", "[", "\"\<Done\>\"", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87378925015469*^9, 3.87378933285146*^9}, {
   3.8737893693456974`*^9, 3.8737894101908174`*^9}, {3.8737894490041027`*^9, 
   3.87378947503518*^9}, {3.873789536687783*^9, 3.873789570134381*^9}, {
   3.873789690484144*^9, 3.8737896977472734`*^9}, {3.8737897290167165`*^9, 
   3.873789745076404*^9}, {3.87378988904733*^9, 3.873789984893133*^9}, {
   3.873790074380772*^9, 3.873790131259481*^9}, {3.873790373904825*^9, 
   3.8737903910997972`*^9}, {3.874554243468017*^9, 3.874554244257376*^9}, 
   3.8747334922366548`*^9},
 Background->GrayLevel[
  0.85],ExpressionUUID->"85e3c223-e183-4234-973c-de12eb3c0501"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"launch", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.8737898701783295`*^9, 3.873789871985821*^9}, 
   3.87378998975667*^9, {3.8737901004912033`*^9, 3.873790104375097*^9}, {
   3.8737901353895144`*^9, 3.873790203045292*^9}, 3.873790263618317*^9, {
   3.873872976316314*^9, 3.873872984248273*^9}, 3.873873038847483*^9},
 Background->GrayLevel[0.85],
 CellLabel->"In[58]:=",ExpressionUUID->"cb867dc0-17e6-4467-a61a-0b9e922b42c9"],

Cell[BoxData["\<\"Done\"\>"], "Print",
 CellChangeTimes->{{3.8738729804852448`*^9, 3.8738729879198875`*^9}, 
   3.873873041038945*^9, 3.874141044590344*^9, 3.874287020186409*^9, 
   3.874554247230755*^9, 3.874561633877385*^9, 3.874563036720664*^9, 
   3.874646908843648*^9, 3.874651981288382*^9, 3.874652014306006*^9, 
   3.874729582194236*^9, 3.874732629633426*^9},
 CellLabel->
  "During evaluation of \
In[58]:=",ExpressionUUID->"853b9ad2-4f6a-4f11-bee2-924a5c83ef31"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                  "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
           "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
   "***)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.873790642128755*^9, 
  3.873790667927589*^9}},ExpressionUUID->"8abc5cf6-bbbe-4b34-ae89-\
c3ac4288217b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "Buffon"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Buffon", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"Show", "->", "True"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Buffon", "::", "usage"}], "=", 
   "\"\<Buffon[NumberOfNeedles,NeedleSize,SurfaceDimension,GridWidth,Options_\
Show_True_Parallelize]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FE`CacheTemplateAndUsage", "[", "\"\<Buffon\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Buffon", "[", 
   RowBox[{
   "iterate_", ",", "linesize_", ",", "plotrange_", ",", "width_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**"}], "*", 
    RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"LOCAL", " ", "VARIABLES"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Quiet", "@", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "h", ",", "bound", ",", "randomised", ",", "rules", 
       ",", "equation", ",", "Plotting", ",", "FirstCoList", ",", "contour", 
       ",", "endpoint", ",", "SecondCo", ",", "intersections", ",", "x", ",", 
       "y", ",", "\[IndentingNewLine]", "GridPlot", ",", "SecondPlot", ",", 
       "SecondPlotCircle", ",", "SecondEndPlot", ",", "FirstPlot", ",", 
       "NeedlePlot", ",", "calculate", ",", "\[IndentingNewLine]", 
       RowBox[{"ColourList", "=", 
        RowBox[{"RandomColor", "[", "iterate", "]"}]}]}], "}"}], 
     RowBox[{"(*", 
      RowBox[{"List", " ", "of", " ", "Random", " ", "Colours"}], "*)"}], ",",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Catch", "[", 
      RowBox[{"Check", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
         RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "PI", " ", "ESTIMATE", " ", "FOR", " ", "PI", " ", "ESTIMATION", " ", 
         "ONLY"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"calculate", ":=", 
          RowBox[{
          "ParallelTable", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"ClearAll", "[", 
              RowBox[{
              "a", ",", "b", ",", "h", ",", "equation", ",", "randomised"}], 
              "]"}], 
             RowBox[{"(*", 
              RowBox[{
              "Clear", " ", "variables", " ", "every", " ", "new", " ", 
               "iteration"}], "*)"}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"a", "=", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"N", "[", "plotrange", "]"}]}], "}"}], "]"}]}], 
             RowBox[{"(*", 
              RowBox[{"random", " ", "x", " ", "coordinate"}], "*)"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"b", "=", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"N", "[", "plotrange", "]"}]}], "}"}], "]"}]}], 
             RowBox[{"(*", 
              RowBox[{"random", " ", "y", " ", "coordinate"}], "*)"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"h", "=", 
              RowBox[{"Part", "[", 
               RowBox[{
                RowBox[{"First", "[", 
                 RowBox[{"Part", "[", 
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"NSolve", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["linesize", "2"], "==", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "a"}], ")"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "b"}], ")"}], "^", "2"}]}]}], ",", 
                    RowBox[{"RandomChoice", "[", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
                    "\[IndentingNewLine]", "Reals"}], "]"}], "]"}], ",", 
                   RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "]"}], "]"}], 
                ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"randomised", "=", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"RegionBounds", "@", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Transform", " ", "region", " ", "to", " ", "bounds"}], 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"ImplicitRegion", "[", 
                    RowBox[{"#", ",", "x"}], "]"}]}], "&"}], "/@", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Transform", " ", "inequality", " ", "to", " ", "region"}], 
                  " ", "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"(", 
                  RowBox[{"{", 
                   RowBox[{"Quiet", "@", 
                    RowBox[{"Reduce", "[", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{
                    RowBox[{"Part", "[", 
                    RowBox[{"h", ",", "2"}], "]"}], ",", 
                    RowBox[{"y", "->", "x"}]}], "]"}], ",", "x", ",", 
                    "Reals"}], "]"}]}], "}"}], ")"}]}], 
                RowBox[{"(*", 
                 RowBox[{
                 "Extract", " ", "Domain", " ", "of", " ", "Semicircle", " ", 
                  "Equation"}], "*)"}], "\[IndentingNewLine]", "]"}], "]"}]}],
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", "Intersections", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"(*", 
               RowBox[{
               "Give", " ", "True", " ", "if", " ", "\"\<True\>\"", " ", "is",
                 " ", "present", " ", "in", " ", "list"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"IntervalMemberQ", "[", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "generate", " ", "list", " ", "for", " ", "True", " ", 
                   "where", " ", "gridline"}], 
                  StyleBox["\[Subset]", "OperatorCharacter"], 
                  RowBox[{
                  "domain", " ", "of", " ", "line", " ", "and", " ", "false", 
                   " ", "otherwise"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"Domain", " ", "of", " ", "line"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Interval", "[", " ", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Variables", "[", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "===", 
                    RowBox[{"{", "y", "}"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "if", " ", "semicircle", " ", "is", " ", "in", " ", 
                    "terms", " ", "of", " ", "y"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", 
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"y", "->", "randomised"}]}], "]"}]}], "}"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "randomised"}], "}"}], "]"}]}], "]"}], 
                  "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"Interval", " ", "of", " ", "Gridlines"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"Interval", "/@", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"a", ",", "a"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "0", ",", 
                    RowBox[{"plotrange", "+", "width"}], ",", "width"}], 
                    "}"}]}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
               "True"}], "]"}]}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "iterate"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
           "*", 
           RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "PARALLELIZE", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "Show", "]"}], "===", "Parallelize"}],
            ",", 
           RowBox[{"Throw", "@", "\[IndentingNewLine]", 
            RowBox[{"N", "[", 
             RowBox[{"linesize", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", " ", "*", "iterate"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Count", "[", 
                   RowBox[{
                    RowBox[{"Quiet", "[", "calculate", "]"}], ",", "True"}], 
                   "]"}], "*", "width"}], ")"}]}], ")"}]}], "]"}]}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
           "*", 
           RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "DATA", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "Show", "]"}], "===", "Data"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Throw", "@", 
            RowBox[{"N", "[", "calculate", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
             "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
           "*", 
           RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"CALCULATIONS", " ", "FOR", " ", "PLOTTING"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "Show", "]"}], "===", "True"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rules", "=", 
             RowBox[{"Dispatch", "[", 
              RowBox[{"Part", "[", 
               RowBox[{"(*", 
                RowBox[{"Extract", " ", "rules", " ", "of", " ", "Reap"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Reap", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Quiet", "@", 
                   RowBox[{"Do", "[", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Reiterate", " ", "for", " ", "different", " ", "random", 
                    " ", "values", " ", "a"}], ",", "b"}], "*)"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ClearAll", "[", 
                    RowBox[{
                    "a", ",", "b", ",", "h", ",", "equation", ",", 
                    "randomised", ",", "bound"}], "]"}], 
                    RowBox[{"(*", 
                    RowBox[{
                    "Clear", " ", "variables", " ", "every", " ", "new", " ", 
                    "iteration"}], "*)"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"a", "=", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"N", "[", "plotrange", "]"}]}], "}"}], "]"}]}], 
                    RowBox[{"(*", 
                    RowBox[{"random", " ", "x", " ", "coordinate"}], "*)"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"b", "=", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"N", "[", "plotrange", "]"}]}], "}"}], "]"}]}], 
                    RowBox[{"(*", 
                    RowBox[{"random", " ", "y", " ", "coordinate"}], "*)"}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Random", " ", "Coordinates"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"a", ",", "b"}], "}"}], ",", "FirstCoList"}], 
                    "]"}], 
                    RowBox[{"(*", 
                    RowBox[{
                    "Append", " ", "coordinate", " ", "to", " ", 
                    "FirstCoList"}], "*)"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Semicircle", " ", "conditional", " ", "expression"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"equation", "=", 
                    RowBox[{
                    RowBox[{"NSolve", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["linesize", "2"], "==", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "a"}], ")"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "b"}], ")"}], "^", "2"}]}]}], ",", 
                    "Plotting"}], "]"}], ",", 
                    RowBox[{"RandomChoice", "[", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "solve", " ", "for", " ", "either", " ", "x", " ", "or", 
                    " ", "y"}], "*)"}], "\[IndentingNewLine]", "Reals"}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}]}], 
                    ";", 
                    RowBox[{"(*", 
                    RowBox[{"choose", " ", "top", " ", "or", " ", 
                    RowBox[{"bottom", "/", "left"}], " ", "or", " ", "right", 
                    " ", "of", " ", "semicircle"}], "*)"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Semicircle", " ", "equation", " ", "\"\<=\>\""}],
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"Sow", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"Normal", "[", "equation", "]"}], "]"}], ",", 
                    RowBox[{"Rule", "->", "Equal"}]}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "extract", " ", "equation", " ", "and", " ", 
                    "transform"}], " ", "->", " ", "to"}], " ", "="}], " ", 
                    "*)"}], "\[IndentingNewLine]", "contour"}], "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Semicircle", " ", "conditional", " ", "expression", " ", 
                    "Values", " ", "only"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"h", "=", 
                    RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"First", "[", "equation", "]"}], ",", "2"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Semicircle", " ", "Equations", " ", "\"\<\[Rule]\>\""}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "EquationList"}], 
                    "]"}], 
                    RowBox[{"(*", 
                    RowBox[{
                    "Extract", " ", "semicircle", " ", "equation", " ", "and",
                     " ", "append", " ", "to", " ", "\"\<EquationList\>\""}], 
                    "*)"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Domain", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "min"], ",", 
                    SubscriptBox["x", "max"]}], "}"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"bound", "=", "\[IndentingNewLine]", 
                    RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RegionBounds", "@", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Transform", " ", "region", " ", "to", " ", "bounds"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"ImplicitRegion", "[", 
                    RowBox[{"#", ",", "x"}], "]"}]}], "&"}], "/@", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Transform", " ", "inequality", " ", "to", " ", 
                    "region"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{"{", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"Reduce", "[", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{
                    RowBox[{"Part", "[", 
                    RowBox[{"h", ",", "2"}], "]"}], ",", 
                    RowBox[{"y", "->", "x"}]}], "]"}], ",", "x", ",", 
                    "Reals"}], "]"}]}], "}"}], ")"}]}], 
                    RowBox[{"(*", 
                    RowBox[{
                    "Extract", " ", "Domain", " ", "of", " ", "Semicircle", 
                    " ", "Equation"}], "*)"}], "\[IndentingNewLine]", "]"}]}],
                     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Random", " ", "x", " ", "or", " ", "y", " ", 
                    "coordinate", " ", "of", " ", "second", " ", "point", " ",
                     "to", " ", "connect", " ", "with", " ", "midpoint"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"randomised", "=", 
                    RowBox[{"RandomReal", "[", "bound", "]"}]}], ";", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Generate", " ", "random", " ", "number", " ", "with", 
                    " ", "a", " ", "domain", " ", "of", " ", "semicircle", 
                    " ", "equation"}], "*)"}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], " ", "Coordinate", " ", 
                    "of", " ", "second", " ", "point", " ", "connecting", " ",
                     "line"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"Sow", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Variables", "[", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "===", 
                    RowBox[{"{", "y", "}"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "if", " ", "equation", " ", "is", " ", "in", " ", "terms",
                     " ", "of", " ", "Y"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"y", "->", "randomised"}]}], "]"}], ",", 
                    "randomised"}], "}"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "substitute", " ", "random", " ", "y", " ", "to", " ", 
                    "find", " ", "x"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"randomised", ",", 
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"x", "->", "randomised"}]}], "]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "substitute", " ", "random", " ", "x", " ", "to", " ", 
                    "find", " ", "y"}], "*)"}], "\[IndentingNewLine]", 
                    "SecondCo"}], "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Endpoints", " ", "of", " ", "semicircle"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"Sow", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Variables", "[", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "===", 
                    RowBox[{"{", "y", "}"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "if", " ", "equation", " ", "is", " ", "in", " ", "terms",
                     " ", "of", " ", "Y"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"a", ",", "y"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", "bound"}], "}"}]}], "]"}], ",", 
                    RowBox[{"(*", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["midpoint", "x"], " ", ",", " ", 
                    SubscriptBox["range", "y"]}], "}"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "b"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "bound"}], "}"}]}], "]"}]}], 
                    RowBox[{"(*", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["Domain", 
                    RowBox[{"x", " "}]], ",", " ", 
                    SubscriptBox["midpoint", "y"]}], "}"}], "*)"}], 
                    "\[IndentingNewLine]", "]"}], ",", "endpoint"}], "]"}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", "Intersections", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Give", " ", "True", " ", "if", " ", "\"\<True\>\"", " ", 
                    "is", " ", "present", " ", "in", " ", "list"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"IntervalMemberQ", "[", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "generate", " ", "list", " ", "for", " ", "True", " ", 
                    "where", " ", "gridline"}], "\[Element]", 
                    RowBox[{
                    "domain", " ", "of", " ", "line", " ", "and", " ", 
                    "false", " ", "otherwise"}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Domain", " ", "of", " ", "line"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Interval", "[", " ", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Variables", "[", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "===", 
                    RowBox[{"{", "y", "}"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "if", " ", "semicircle", " ", "is", " ", "in", " ", 
                    "terms", " ", "of", " ", "y"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", 
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"y", "->", "randomised"}]}], "]"}]}], "}"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "randomised"}], "}"}], "]"}]}], "]"}], 
                    "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Interval", " ", "of", " ", "Gridlines"}], "*)"}],
                     "\[IndentingNewLine]", 
                    RowBox[{"Interval", "/@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"a", ",", "a"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "0", ",", 
                    RowBox[{"plotrange", "+", "width"}], ",", "width"}], 
                    "}"}]}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                    "True"}], "]"}], ",", "\[IndentingNewLine]", 
                    "intersections"}], "]"}], ";"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "iterate"}],
                     "]"}]}], 
                  RowBox[{"(*", 
                   RowBox[{
                   "Reiterate", " ", "\"\<iterate\>\"", " ", "times"}], 
                   "*)"}], "\[IndentingNewLine]", ",", "_", ",", "Rule"}], 
                 "]"}], 
                RowBox[{"(*", 
                 RowBox[{"Reap", " ", "as", " ", "rules"}], "*)"}], 
                "\[IndentingNewLine]", ",", "2"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
               "**"}], "*", 
              RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"DEFINING", " ", "PLOTS"}], "*)"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Grid", " ", "Lines"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"GridPlot", "=", 
             RowBox[{"ContourPlot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"##1", "&"}], ")"}], "[", "]"}], 
               RowBox[{"(*", 
                RowBox[{"Empty", " ", "Plot"}], "*)"}], "\[IndentingNewLine]",
                ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"0", "-", "linesize"}], ",", 
                 RowBox[{"plotrange", "+", "linesize"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"0", "-", "linesize"}], ",", 
                 RowBox[{"plotrange", "+", "linesize"}]}], "}"}], ",", 
               RowBox[{"GridLines", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"plotrange", "+", "width"}], ",", "width"}], 
                   "]"}], ",", "None"}], "}"}]}], ",", 
               RowBox[{"GridLinesStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Black", ",", "Dotted"}], "]"}]}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "Define", " ", "Plot", " ", "Circle", " ", "of", " ", "possible",
               " ", "second", " ", "points"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"SecondPlotCircle", "=", 
             RowBox[{"ContourPlot", "[", 
              RowBox[{
               RowBox[{"Evaluate", "@", 
                RowBox[{"ReplaceAll", "[", 
                 RowBox[{"Plotting", ",", "rules"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"-", "linesize"}], ",", 
                 RowBox[{"plotrange", "+", "linesize"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"-", "linesize"}], ",", 
                 RowBox[{"plotrange", "+", "linesize"}]}], "}"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"ContourStyle", "\[Rule]", "ColourList"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "Define", " ", "Plot", " ", "Semicircle", " ", "of", " ", 
              "possible", " ", "second", " ", "points"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"SecondPlot", "=", 
             RowBox[{"ContourPlot", "[", 
              RowBox[{
               RowBox[{"Evaluate", "@", 
                RowBox[{"ReplaceAll", "[", 
                 RowBox[{"contour", ",", "rules"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"-", "linesize"}], ",", 
                 RowBox[{"plotrange", "+", "linesize"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"-", "linesize"}], ",", 
                 RowBox[{"plotrange", "+", "linesize"}]}], "}"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"ContourStyle", "\[Rule]", "ColourList"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "Define", " ", "Plot", " ", "of", " ", "predefined", " ", 
              "Random", " ", "Coordinates"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"FirstPlot", "=", 
             RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Tooltip", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", "#", "}"}], "&"}], "/@", 
                 RowBox[{"ReplaceAll", "[", 
                  RowBox[{"FirstCoList", ",", "rules"}], "]"}]}], 
                RowBox[{"(*", 
                 RowBox[{"wrap", " ", 
                  RowBox[{"{", "}"}], " ", "around", " ", "each", " ", 
                  "coordinate", " ", "to", " ", "allow", " ", "for", " ", 
                  "different", " ", "colours"}], "*)"}], 
                "\[IndentingNewLine]", "]"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", "ColourList"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Axes", "->", "False"}], ",", 
               RowBox[{"Frame", "->", "True"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "Define", " ", "Plot", " ", "of", " ", "Semicircle", " ", 
              "Endpoints"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"SecondEndPlot", "=", 
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Tooltip", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", "#", "}"}], "&"}], "/@", 
                 RowBox[{"(*", 
                  RowBox[{"wrap", " ", 
                   RowBox[{"{", "}"}], " ", "around", " ", "each", " ", 
                   "coordinate", " ", "to", " ", "allow", " ", "for", " ", 
                   "different", " ", "colours"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"ReplaceAll", "[", 
                    RowBox[{"endpoint", ",", "rules"}], "]"}], ",", "1"}], 
                  "]"}]}], "]"}], ",", 
               RowBox[{"(*", 
                RowBox[{"Create", " ", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], " ", "coordinates", " ", 
                 "by", " ", "tranposing", " ", "a", " ", "list", " ", "of", 
                 " ", "X", " ", "and", " ", "Y", " ", "coordinates"}], "*)"}],
                "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"#", ",", "2"}], "]"}]}], "&"}], ",", 
                  "ColourList"}], "]"}]}], ",", 
               RowBox[{"(*", 
                RowBox[{
                "Double", " ", "every", " ", "colour", " ", "in", " ", "list",
                  " ", "as", " ", "semicircles", " ", "have", " ", "2", " ", 
                 "endpoints"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Axes", "->", "False"}], ",", 
               RowBox[{"Frame", "->", "True"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Define", " ", "Plot", " ", "of", " ", "Needle"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"NeedlePlot", "=", 
             RowBox[{"ListLinePlot", "[", 
              RowBox[{
               RowBox[{"Tooltip", "@", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"FirstCoList", "/.", "rules"}], ",", 
                   RowBox[{"SecondCo", "/.", "rules"}]}], "}"}], "]"}]}], ",", 
               RowBox[{"(*", 
                RowBox[{"Create", " ", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], " ", "by", " ", 
                 "transposing", " ", "a", " ", "list", " ", "of", " ", "x", 
                 " ", "and", " ", "y", " ", "coordinates"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"Axes", "->", "False"}], ",", 
               RowBox[{"Frame", "->", "True"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", "ColourList"}]}], "]"}]}], ";",
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
               "**"}], "*", 
              RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", "DISPLAY", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
               "**"}], "*", 
              RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", "Text", "*)"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"TableForm", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Column", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<N: Number of Needles \>\"", ",", "iterate"}],
                     "}"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<L: Needle Length: \>\"", ",", "linesize"}], 
                    "}"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<W : Grid width: \>\"", ",", "width"}], "}"}],
                     "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<I: Intersections: \>\"", ",", 
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{"intersections", ",", "rules"}], "]"}], ",", 
                    "True"}], "]"}]}], "}"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Estimating Pi: \!\(\*FractionBox[\(\(\\\ \)\(\(2\)  \
\(L\)\(\\\ \) \(N\)\(\\\ \)\)\), \(I\\\  W\)]\) \[Rule] \>\"", ",", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "2", ",", "\"\< x \>\"", ",", "linesize", " ", ",", 
                    "\"\< x \>\"", ",", "iterate"}], "}"}], "]"}], "/", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{"intersections", ",", "rules"}], "]"}], ",", 
                    "True"}], "]"}], ",", "\"\< x \>\"", ",", "width"}], 
                    "}"}], "]"}]}], ",", "\"\< \[Rule] \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"linesize", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", " ", "*", "iterate"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{"intersections", ",", "rules"}], "]"}], ",", 
                    "True"}], "]"}], "*", "width"}], ")"}]}], ")"}]}], "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "13"}], ",", "Bold"}], 
                    "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", "}"}], "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{
                   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                     "**", "**", "**", "**"}], "*", 
                   RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}],
                  "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"SHOW", " ", "PLOTS"}], "*)"}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"Show", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"(*", "GridLines", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"lines", "==", "1"}], ",", "GridPlot", ",", 
                    RowBox[{
                    RowBox[{"##", "&"}], "[", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", "Blank", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"ContourPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"##1", "&"}], ")"}], "[", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"0", "-", "linesize"}], ",", 
                    RowBox[{"plotrange", "+", "linesize"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", 
                    RowBox[{"0", "-", "linesize"}], ",", 
                    RowBox[{"plotrange", "+", "linesize"}]}], "}"}], ",", 
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", "Circle", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"circle", "==", "1"}], ",", "SecondPlotCircle", 
                    ",", 
                    RowBox[{
                    RowBox[{"##", "&"}], "[", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", "Semicircle", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Semicircle", "==", "1"}], ",", "SecondPlot", ",", 
                    RowBox[{
                    RowBox[{"##", "&"}], "[", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Random", " ", "Coordinates"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"RandomCo", "==", "1"}], ",", "FirstPlot", ",", 
                    RowBox[{
                    RowBox[{"##", "&"}], "[", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Semicircle", " ", "Endpoints"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Endpoint", "==", "1"}], ",", "SecondEndPlot", 
                    ",", 
                    RowBox[{
                    RowBox[{"##", "&"}], "[", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Needle", " ", "Line"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Needle", "==", "1"}], ",", "NeedlePlot", ",", 
                    RowBox[{
                    RowBox[{"##", "&"}], "[", "]"}]}], "]"}]}], "}"}], ",", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"ImageSize", "->", 
                    RowBox[{"{", 
                    RowBox[{"400", ",", "400"}], "}"}]}]}], 
                  "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                 "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
                  "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
                 "**", "**"}], "*", 
                RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", "CHECKBOXES", "*)"}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", "GridLines", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"lines", ",", "1", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<GridLines\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Random", " ", "Coordinates"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"RandomCo", ",", "0", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Random First Points\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", "Circle", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"circle", ",", "0", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Possible Second Points Circle\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", "Semicircle", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Semicircle", ",", "0", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Possible Second Points SemiCircle\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", "Endpoint", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Endpoint", ",", "0", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Semicircle Endpoints\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", "Needle", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Needle", ",", "0", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Needle\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ControlPlacement", "->", 
               RowBox[{"{", "Top", "}"}]}]}], 
             RowBox[{"(*", 
              RowBox[{"CheckBox", " ", "Position"}], "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
           "]"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
           "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
            "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
          RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Throw", "[", "0", "]"}]}], "]"}], "]"}]}], 
    RowBox[{"(*", 
     RowBox[{"give", " ", "0", " ", "if", " ", "no", " ", "intersections"}], 
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8725753903017197`*^9, 3.87257543934464*^9}, {
   3.872575480278954*^9, 3.872575484472371*^9}, {3.872575551996065*^9, 
   3.8725755553818197`*^9}, {3.872575693688696*^9, 3.872575715310976*^9}, {
   3.8725757678735757`*^9, 3.8725759174517045`*^9}, {3.872575956444143*^9, 
   3.8725759589750576`*^9}, {3.872575993019615*^9, 3.872576106868576*^9}, {
   3.872576140012043*^9, 3.872576144275866*^9}, {3.8725762022335424`*^9, 
   3.8725762040110717`*^9}, {3.872576258799671*^9, 3.8725763304036036`*^9}, {
   3.872576447990615*^9, 3.87257646206972*^9}, {3.872576517718768*^9, 
   3.872576582972194*^9}, {3.872576616926617*^9, 3.872576622089949*^9}, {
   3.872576914738747*^9, 3.872576932604823*^9}, {3.872576964993097*^9, 
   3.872576976943599*^9}, {3.872577009235065*^9, 3.8725770325315995`*^9}, {
   3.872577085397688*^9, 3.872577087983738*^9}, {3.8725778377333345`*^9, 
   3.8725779283831263`*^9}, {3.87257796276734*^9, 3.872578002214203*^9}, {
   3.872578044358883*^9, 3.872578046976531*^9}, {3.872578089970955*^9, 
   3.872578091882326*^9}, {3.872578154398606*^9, 3.8725781849799867`*^9}, {
   3.872578327640962*^9, 3.872578424592788*^9}, {3.87257865612187*^9, 
   3.8725786685626755`*^9}, 3.872578712482669*^9, {3.872578788423784*^9, 
   3.872578813248863*^9}, {3.872578845261538*^9, 3.872578845600956*^9}, {
   3.872578898590751*^9, 3.872578902783267*^9}, {3.8725790168292737`*^9, 
   3.872579111358951*^9}, {3.872579186082582*^9, 3.872579491950062*^9}, {
   3.872579599705037*^9, 3.872579671940795*^9}, {3.872579787167836*^9, 
   3.872579917618216*^9}, {3.8725799506828766`*^9, 3.872579952537805*^9}, {
   3.872580014024544*^9, 3.872580047752635*^9}, {3.872580097991588*^9, 
   3.872580107400798*^9}, 3.8725801419630585`*^9, {3.8725801880914106`*^9, 
   3.872580215778822*^9}, 3.872580293889065*^9, {3.872582031732918*^9, 
   3.872582053081993*^9}, {3.8725821064590607`*^9, 3.8725821102652383`*^9}, {
   3.872582935948357*^9, 3.87258302236372*^9}, {3.872583794420426*^9, 
   3.872583799316743*^9}, {3.872583841988474*^9, 3.872583857004318*^9}, {
   3.8725840112483625`*^9, 3.872584057551076*^9}, {3.8725841214094543`*^9, 
   3.8725841229012737`*^9}, {3.872584216446305*^9, 3.8725842202213516`*^9}, {
   3.8725842629086246`*^9, 3.872584272536739*^9}, {3.8725843431023455`*^9, 
   3.8725843768265195`*^9}, {3.872584415126427*^9, 3.872584438840488*^9}, {
   3.872584493777688*^9, 3.8725845030280333`*^9}, {3.872584596203705*^9, 
   3.872584621522794*^9}, {3.872584714391981*^9, 3.872584723203854*^9}, {
   3.872585069800748*^9, 3.8725850763857164`*^9}, {3.872585244686517*^9, 
   3.872585257000603*^9}, 3.872585484798597*^9, 3.872586210896453*^9, 
   3.8725862617806625`*^9, {3.872586736499592*^9, 3.8725867376057243`*^9}, {
   3.872586990111645*^9, 3.872586990735463*^9}, {3.8725871481511855`*^9, 
   3.872587156526716*^9}, {3.8725872181887794`*^9, 3.872587218593422*^9}, {
   3.872590863252415*^9, 3.872590866408517*^9}, {3.872591172585528*^9, 
   3.87259117341959*^9}, {3.872591283456332*^9, 3.872591294004747*^9}, {
   3.872591447681974*^9, 3.8725914570887337`*^9}, {3.8725915191581774`*^9, 
   3.872591533865045*^9}, 3.8725916423989706`*^9, 3.8725918624322977`*^9, {
   3.872591926752453*^9, 3.872591939767542*^9}, {3.8725919918676915`*^9, 
   3.872592049331585*^9}, {3.872592117000606*^9, 3.87259213526271*^9}, {
   3.872592171781703*^9, 3.872592200493828*^9}, 3.8725922988152943`*^9, {
   3.872592372232562*^9, 3.87259237781059*^9}, {3.872592427835547*^9, 
   3.872592480033733*^9}, {3.872592579892173*^9, 3.8725925811527147`*^9}, {
   3.8725926464618664`*^9, 3.872592699344513*^9}, {3.872592738233556*^9, 
   3.872592753476053*^9}, {3.872593289245738*^9, 3.872593316428531*^9}, {
   3.872593358191491*^9, 3.8725933970255623`*^9}, {3.872593615698896*^9, 
   3.872593638246048*^9}, {3.8725937765702796`*^9, 3.872593783322587*^9}, {
   3.872593828878645*^9, 3.8725938370371857`*^9}, {3.872594648993082*^9, 
   3.872594651524379*^9}, {3.872594881969989*^9, 3.872594882883359*^9}, {
   3.872594937938123*^9, 3.872594973033871*^9}, {3.8725950114646587`*^9, 
   3.872595015794266*^9}, {3.872595152343508*^9, 3.872595163489269*^9}, {
   3.872595210626057*^9, 3.872595227296154*^9}, {3.8725953677633114`*^9, 
   3.872595410891782*^9}, {3.8725959056721907`*^9, 3.8725959472390566`*^9}, {
   3.8725960578300695`*^9, 3.872596111821255*^9}, {3.8725961423827586`*^9, 
   3.872596171358425*^9}, {3.872596264419284*^9, 3.872596265154977*^9}, {
   3.872596390914666*^9, 3.872596756169638*^9}, {3.8725968012520957`*^9, 
   3.872596942938032*^9}, 3.872597019021635*^9, {3.872597053347184*^9, 
   3.8725970934922523`*^9}, {3.872597217431362*^9, 3.872597261591306*^9}, {
   3.872597291605991*^9, 3.8725974412756844`*^9}, {3.8725974953752737`*^9, 
   3.8725977732520914`*^9}, {3.872597804625145*^9, 3.872597952748096*^9}, {
   3.8725980521983213`*^9, 3.8725984037588816`*^9}, {3.872598436579378*^9, 
   3.8725984374335732`*^9}, {3.872598470921975*^9, 3.872598618808506*^9}, {
   3.8725987569949093`*^9, 3.872598763972078*^9}, {3.872598799862878*^9, 
   3.8725989712797537`*^9}, {3.872599016026545*^9, 3.872599151583932*^9}, {
   3.872599224567265*^9, 3.872599236433776*^9}, {3.8725993541399403`*^9, 
   3.8725993592303853`*^9}, {3.872599454092245*^9, 3.8725994657164464`*^9}, {
   3.872599560555264*^9, 3.872599572700455*^9}, {3.8725996164380827`*^9, 
   3.8725996249617405`*^9}, {3.872600090572824*^9, 3.872600110866433*^9}, {
   3.872600157431867*^9, 3.872600192856307*^9}, {3.872600260497167*^9, 
   3.8726002676292286`*^9}, {3.872600318515706*^9, 3.872600346795519*^9}, {
   3.872600424167409*^9, 3.872600575217378*^9}, {3.87260062698998*^9, 
   3.872600647140048*^9}, {3.872600678813954*^9, 3.872600685853238*^9}, {
   3.872600723589696*^9, 3.872600730977775*^9}, {3.872600873255342*^9, 
   3.8726009155654902`*^9}, {3.872600965127481*^9, 3.8726010987484627`*^9}, {
   3.872601151978589*^9, 3.872601172493363*^9}, 3.872601319416228*^9, {
   3.872601435327503*^9, 3.872601436811267*^9}, {3.872601571938775*^9, 
   3.872601602492249*^9}, {3.872601641588807*^9, 3.872601873029995*^9}, {
   3.872601917003967*^9, 3.872601960627851*^9}, {3.872602602288109*^9, 
   3.8726026025639486`*^9}, {3.87263423713029*^9, 3.872634240429242*^9}, {
   3.872634489701203*^9, 3.872634543407607*^9}, {3.872634591152249*^9, 
   3.872634597268018*^9}, {3.872634690237846*^9, 3.872634749436279*^9}, {
   3.872634837398235*^9, 3.872634838145373*^9}, {3.872635378157227*^9, 
   3.872635382239668*^9}, {3.872635414648529*^9, 3.872635457624277*^9}, {
   3.872635633543468*^9, 3.87263567692692*^9}, {3.8726357135868583`*^9, 
   3.872635753181997*^9}, {3.8726357848019*^9, 3.872635820100749*^9}, {
   3.8726358713923244`*^9, 3.872635888785347*^9}, {3.872635944436936*^9, 
   3.872635974631486*^9}, {3.872636024064886*^9, 3.872636039290684*^9}, {
   3.872636095495488*^9, 3.872636112422839*^9}, {3.872636251348877*^9, 
   3.872636298874866*^9}, {3.872636340885148*^9, 3.87263638052688*^9}, {
   3.872636424130864*^9, 3.87263642968538*^9}, {3.8726364940201893`*^9, 
   3.872636495554999*^9}, {3.872636604436903*^9, 3.872636742687204*^9}, {
   3.872636773794668*^9, 3.872636822114826*^9}, {3.872638178830308*^9, 
   3.872638210012861*^9}, {3.8726382421885724`*^9, 3.872638313234339*^9}, {
   3.872638390451332*^9, 3.872638427871649*^9}, {3.872638500702281*^9, 
   3.8726385818493*^9}, {3.8726386156336875`*^9, 3.872638623441106*^9}, {
   3.872638663810306*^9, 3.872638667218224*^9}, {3.872638720515373*^9, 
   3.872638724946948*^9}, {3.8726387743698783`*^9, 3.872638796160496*^9}, {
   3.872638873866853*^9, 3.872638875308958*^9}, {3.872638944505303*^9, 
   3.872638946109173*^9}, {3.872638988206909*^9, 3.8726390453999643`*^9}, {
   3.872639205532574*^9, 3.8726392105267544`*^9}, {3.8726392901011868`*^9, 
   3.872639291561294*^9}, {3.872639336799093*^9, 3.872639404227766*^9}, {
   3.872642442920035*^9, 3.872642470969316*^9}, 3.872650211850778*^9, {
   3.872650258274835*^9, 3.872650264045672*^9}, {3.87265029899864*^9, 
   3.8726503127448235`*^9}, {3.872650375673235*^9, 3.8726503937441854`*^9}, 
   3.872650519844582*^9, {3.8726506398910856`*^9, 3.872650642445055*^9}, {
   3.872650728772827*^9, 3.872650742890664*^9}, {3.872650783112745*^9, 
   3.87265078901081*^9}, {3.8726508207039685`*^9, 3.8726508561759825`*^9}, {
   3.872650913106208*^9, 3.872650918985098*^9}, 3.87265095905822*^9, {
   3.872651020071774*^9, 3.872651044944709*^9}, {3.87265117629157*^9, 
   3.872651207407039*^9}, {3.872651396408451*^9, 3.8726514121938896`*^9}, 
   3.872651469491862*^9, {3.8726520925940685`*^9, 3.8726521138528156`*^9}, {
   3.872652171041053*^9, 3.872652222121238*^9}, {3.8726522602946973`*^9, 
   3.872652278320909*^9}, 3.8726545182753787`*^9, {3.872654764639065*^9, 
   3.872654797996953*^9}, {3.872654853317075*^9, 3.872654996482138*^9}, {
   3.8726550990054483`*^9, 3.872655116984991*^9}, 3.872655270098527*^9, {
   3.872655316955239*^9, 3.8726553333300037`*^9}, 3.872655427167084*^9, {
   3.872655762633631*^9, 3.872655816833512*^9}, 3.8726560148650994`*^9, 
   3.872656097038081*^9, {3.872656245603826*^9, 3.872656269630438*^9}, {
   3.872656306315106*^9, 3.8726564136123896`*^9}, {3.872656479858477*^9, 
   3.872656491820053*^9}, {3.872656800448028*^9, 3.872656803195987*^9}, {
   3.872656923602187*^9, 3.872656995284072*^9}, {3.872657087946064*^9, 
   3.87265710030149*^9}, {3.872657131329518*^9, 3.872657133219456*^9}, {
   3.872657272416545*^9, 3.872657297332068*^9}, {3.872658128619991*^9, 
   3.872658171860052*^9}, {3.8726582123410563`*^9, 3.872658284868969*^9}, {
   3.872658364673145*^9, 3.8726583721844006`*^9}, {3.8726584038620186`*^9, 
   3.8726584584989834`*^9}, 3.872658596781347*^9, {3.872658639444436*^9, 
   3.872658643804422*^9}, {3.8726587370793285`*^9, 3.8726587406799717`*^9}, {
   3.8726587766731095`*^9, 3.872658777466366*^9}, {3.8726589309684*^9, 
   3.8726589448169537`*^9}, {3.872659050779989*^9, 3.872659066051979*^9}, {
   3.8726591177932515`*^9, 3.872659118246163*^9}, {3.872659159439437*^9, 
   3.872659196101446*^9}, {3.872659426102233*^9, 3.8726594273795547`*^9}, {
   3.872659463903964*^9, 3.872659548143359*^9}, 3.8726596473020344`*^9, {
   3.8726616678170166`*^9, 3.8726620358856*^9}, {3.872662085312378*^9, 
   3.87266219776236*^9}, {3.872662231673761*^9, 3.872662236120216*^9}, {
   3.872662271607756*^9, 3.8726624706639543`*^9}, {3.872662504032167*^9, 
   3.8726625073469687`*^9}, {3.872662553820029*^9, 3.872662555490075*^9}, {
   3.872662815659495*^9, 3.8726628232814865`*^9}, {3.8726629396060543`*^9, 
   3.8726629550051384`*^9}, {3.872663080173517*^9, 3.872663080754848*^9}, {
   3.872663113979973*^9, 3.872663114228043*^9}, {3.872663231784565*^9, 
   3.872663241743245*^9}, {3.872663436197968*^9, 3.872663627600047*^9}, {
   3.872663659641094*^9, 3.8726636803302627`*^9}, {3.872663764264112*^9, 
   3.8726637870043526`*^9}, {3.872663825340172*^9, 3.8726638318159027`*^9}, {
   3.872663921167011*^9, 3.872663951126515*^9}, {3.872663997582153*^9, 
   3.872663999387945*^9}, {3.872664063250253*^9, 3.872664117292167*^9}, {
   3.872664182583411*^9, 3.8726641858520947`*^9}, {3.872664363364558*^9, 
   3.872664468287835*^9}, {3.8726645097643*^9, 3.872664747178172*^9}, {
   3.872664791755044*^9, 3.8726648304193482`*^9}, {3.872664881060088*^9, 
   3.872665073205039*^9}, {3.872665106343649*^9, 3.872665370645881*^9}, {
   3.872665420978856*^9, 3.872665429547905*^9}, {3.8726654597699375`*^9, 
   3.872665907848861*^9}, {3.872665943779973*^9, 3.872666072384384*^9}, {
   3.872666147454514*^9, 3.8726661594493*^9}, {3.872666232486886*^9, 
   3.872666233485041*^9}, 3.872666291263488*^9, {3.8726663437688694`*^9, 
   3.872666362246044*^9}, {3.87266650503615*^9, 3.872666580723786*^9}, {
   3.872666740786111*^9, 3.872666803034897*^9}, {3.872666925961909*^9, 
   3.8726669285902433`*^9}, 3.8726683545183296`*^9, {3.8726684044614615`*^9, 
   3.872668411525645*^9}, {3.872669739851074*^9, 3.872669740914812*^9}, 
   3.87267012006041*^9, {3.872741505527433*^9, 3.872741552856741*^9}, {
   3.8727415907064247`*^9, 3.87274161534812*^9}, {3.872741656256463*^9, 
   3.8727416581272907`*^9}, {3.872741691603298*^9, 3.872741721031787*^9}, {
   3.8727417922639313`*^9, 3.8727418428382063`*^9}, {3.8727418841770363`*^9, 
   3.872741895042289*^9}, {3.872744327038317*^9, 3.872744364631063*^9}, {
   3.872744414425408*^9, 3.872744438166366*^9}, {3.87274448086166*^9, 
   3.8727444840460634`*^9}, {3.872757650695115*^9, 3.872757658132723*^9}, {
   3.872757692406286*^9, 3.872757693877584*^9}, {3.872757740630281*^9, 
   3.872757798729065*^9}, {3.8727578835316405`*^9, 3.872757892014984*^9}, 
   3.8727579313201275`*^9, {3.8727580251631417`*^9, 3.872758039266992*^9}, {
   3.872758138207421*^9, 3.872758273737046*^9}, {3.8727583404728327`*^9, 
   3.87275846659965*^9}, {3.872758592426279*^9, 3.8727586605763535`*^9}, {
   3.8727587436952*^9, 3.872758810428927*^9}, {3.87275885825611*^9, 
   3.872758868241081*^9}, {3.872758908267089*^9, 3.8727589818178287`*^9}, {
   3.872759918621981*^9, 3.872759938081441*^9}, {3.872759978715*^9, 
   3.8727600328625417`*^9}, {3.872760128842819*^9, 3.87276012940652*^9}, {
   3.8727601621735525`*^9, 3.872760162921918*^9}, {3.8727604139296885`*^9, 
   3.872760501975814*^9}, {3.87276057812669*^9, 3.872760584187865*^9}, {
   3.872760755359589*^9, 3.872760755628929*^9}, {3.872760877530701*^9, 
   3.872761023328552*^9}, {3.872761056526469*^9, 3.8727610722090025`*^9}, {
   3.872761523705626*^9, 3.8727615607728233`*^9}, {3.8727616506569242`*^9, 
   3.8727616553408747`*^9}, {3.8727617287076316`*^9, 3.87276182968568*^9}, {
   3.87276187368289*^9, 3.872761930543791*^9}, {3.8728332159702063`*^9, 
   3.8728332783874516`*^9}, {3.872843107382222*^9, 3.872843139902283*^9}, {
   3.8737017526773286`*^9, 3.8737017835468693`*^9}, {3.873701874840289*^9, 
   3.873702031633052*^9}, {3.8737020698586397`*^9, 3.8737020874710836`*^9}, {
   3.8737025524373846`*^9, 3.873702554498765*^9}, {3.873703752609517*^9, 
   3.8737037546264777`*^9}, 3.873703853759473*^9, 3.873703946836449*^9, 
   3.873704159034128*^9, {3.873786114979484*^9, 3.873786123780105*^9}, {
   3.873786250246998*^9, 3.873786283482888*^9}, {3.8737863537819004`*^9, 
   3.8737865348822017`*^9}, {3.8737866214489145`*^9, 3.873786621938102*^9}, {
   3.8737868208767157`*^9, 3.873786893430665*^9}, {3.8737890558859262`*^9, 
   3.873789071837149*^9}, {3.873873154293746*^9, 3.873873168054929*^9}, {
   3.874287330534374*^9, 3.87428733115139*^9}, {3.874287440439221*^9, 
   3.8742874412542524`*^9}, {3.874306019795811*^9, 3.874306021069069*^9}, {
   3.8745543002144957`*^9, 3.87455430099592*^9}, {3.874557891062132*^9, 
   3.874558042649414*^9}, {3.87455808106043*^9, 3.874558097665485*^9}, {
   3.87455815810081*^9, 3.874558268788655*^9}, {3.874558817715978*^9, 
   3.874558823929743*^9}, {3.8745588549355526`*^9, 3.874558879329915*^9}, {
   3.874559291755745*^9, 3.8745593011359925`*^9}, {3.874559545697519*^9, 
   3.8745595470444613`*^9}, {3.87456017131522*^9, 3.8745601780068665`*^9}, {
   3.874562904676008*^9, 3.874562931229078*^9}, {3.874562966241786*^9, 
   3.874562969557807*^9}, {3.874563016172997*^9, 3.874563021779972*^9}, {
   3.8745631152906647`*^9, 3.874563190639812*^9}, {3.8745633019028435`*^9, 
   3.874563304945963*^9}, 3.87456336949636*^9, 3.874563441204594*^9, {
   3.87456399570761*^9, 3.874563995971974*^9}, {3.8745641761772795`*^9, 
   3.8745641762675676`*^9}, {3.8745643099865503`*^9, 3.874564380005973*^9}, {
   3.874564468109476*^9, 3.874564476048482*^9}, {3.874564912015478*^9, 
   3.8745649135888786`*^9}, {3.87456504925486*^9, 3.8745650620100994`*^9}, 
   3.874565420548991*^9, {3.8746468712939477`*^9, 3.874646872104901*^9}, {
   3.8746469582346883`*^9, 3.874646960853651*^9}, {3.874648909496333*^9, 
   3.8746489106564035`*^9}, 3.874650975686666*^9, {3.874651041207975*^9, 
   3.874651051173048*^9}, {3.874651081629337*^9, 3.874651111825192*^9}, {
   3.87465115021911*^9, 3.8746511806196527`*^9}, {3.874652170520046*^9, 
   3.874652173687189*^9}, {3.874652235777192*^9, 3.874652314102665*^9}, {
   3.874652367078728*^9, 3.874652368560984*^9}, {3.874652477437233*^9, 
   3.87465247871346*^9}, {3.874652565193286*^9, 3.874652566112319*^9}, {
   3.874729298395996*^9, 3.874729309080456*^9}, {3.8747293392821383`*^9, 
   3.874729350688573*^9}, {3.874731619978834*^9, 3.8747316240713634`*^9}, {
   3.874732184168211*^9, 3.8747321883392787`*^9}, {3.8747322643713245`*^9, 
   3.874732288971693*^9}, {3.8747324449610376`*^9, 3.87473246097029*^9}, {
   3.874732496772054*^9, 3.874732581069384*^9}, {3.874732670423901*^9, 
   3.874732732595643*^9}, {3.874732804046782*^9, 3.874732852298287*^9}, {
   3.874733429064504*^9, 3.874733462476919*^9}, {3.8747376152132597`*^9, 
   3.874737616260379*^9}, 3.874737728065391*^9, {3.874737764129134*^9, 
   3.8747377647582493`*^9}, {3.874737967082671*^9, 3.8747379681073117`*^9}, {
   3.874738000589062*^9, 3.874738002230385*^9}},
 Background->RGBColor[
  0.9529411764705882, 0.9529411764705882, 0.9529411764705882],
 CellLabel->"In[9]:=",ExpressionUUID->"0ee97faa-d207-40ca-9203-2e2c49bb043c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.874737873494812*^9, 
  3.8747378780074234`*^9}},ExpressionUUID->"43a591c1-f414-4e74-aeaa-\
e59ebf6a4d3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Buffon", "[", 
      RowBox[{"100", ",", "2", ",", "100", ",", "3", ",", 
       RowBox[{"Show", "->", "Parallelize"}]}], "]"}], ",", "1000"}], "]"}], 
   ",", 
   RowBox[{"{", "0.1", "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\[Pi]", "}"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"Method", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<GridLinesInFront\>\"", "->", "True"}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "Thick"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8745652209354944`*^9, 3.874565252152053*^9}, {
  3.874565381090381*^9, 3.87456538985148*^9}, {3.8745654320770593`*^9, 
  3.874565444078838*^9}, {3.874565491357817*^9, 3.874565504783795*^9}, {
  3.8745655604871254`*^9, 3.874565567958748*^9}, {3.874565941631045*^9, 
  3.874565943436107*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"ad582789-abd8-4a25-91ef-ad0266d696af"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.49699999999999994`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.49699999999999994`], Thickness[Small]}], 
     RectangleBox[{2.3000000000000003, 0}, {2.4000000000000004, 4.},
      RoundingRadius->0], RectangleBox[{2.4000000000000004, 0}, {2.5000000000000004, 8.},
      RoundingRadius->0], RectangleBox[{2.5000000000000004, 0}, {2.6000000000000005, 30.},
      RoundingRadius->0], RectangleBox[{2.6000000000000005, 0}, {2.7, 53.},
      RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8000000000000003, 81.},
      RoundingRadius->0], RectangleBox[{2.8000000000000003, 0}, {2.9000000000000004, 121.},
      RoundingRadius->0], RectangleBox[{2.9000000000000004, 0}, {3.0000000000000004, 72.},
      RoundingRadius->0], RectangleBox[{3.0000000000000004, 0}, {3.1000000000000005, 77.},
      RoundingRadius->0], RectangleBox[{3.1000000000000005, 0}, {3.2, 163.},
      RoundingRadius->0], RectangleBox[{3.2, 0}, {3.3000000000000003, 77.},
      RoundingRadius->0], RectangleBox[{3.3000000000000003, 0}, {3.4000000000000004, 65.},
      RoundingRadius->0], RectangleBox[{3.4000000000000004, 0}, {3.5000000000000004, 68.},
      RoundingRadius->0], RectangleBox[{3.5000000000000004, 0}, {3.6000000000000005, 36.},
      RoundingRadius->0], RectangleBox[{3.6000000000000005, 0}, {3.7, 38.},
      RoundingRadius->0], RectangleBox[{3.7, 0}, {3.8000000000000003, 22.},
      RoundingRadius->0], RectangleBox[{3.8000000000000003, 0}, {3.9000000000000004, 32.},
      RoundingRadius->0], RectangleBox[{3.9000000000000004, 0}, {4., 23.},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.1000000000000005, 13.},
      RoundingRadius->0], RectangleBox[{4.1000000000000005, 0}, {4.2, 10.},
      RoundingRadius->0], RectangleBox[{4.300000000000001, 0}, {4.4, 3.},
      RoundingRadius->0], RectangleBox[{4.4, 0}, {4.5, 2.},
      RoundingRadius->0], RectangleBox[{4.700000000000001, 0}, {4.800000000000001, 1.},
      RoundingRadius->0], RectangleBox[{4.9, 0}, {5., 1.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.2460000000000004`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{{Pi}, None}, {{3.141592653589793}, None}],
  GridLinesStyle->Directive[
    RGBColor[1, 0, 0], 
    Thickness[Large]],
  ImageSize->{526.9090909090916, Automatic},
  Method->{"GridLinesInFront" -> True},
  PlotRange->{{2.3000000000000003`, 5.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.874565255428247*^9, {3.8745653870941143`*^9, 3.874565393624297*^9}, 
   3.874565425857736*^9, {3.874565489349273*^9, 3.874565525469732*^9}, 
   3.874565788990508*^9, 3.8745661669286537`*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"b3dd67c4-b2fe-4bae-af45-15cc57cde71d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**"}], "*", 
   RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}]], "Input",Expres\
sionUUID->"ae83b453-e083-45f0-9a4b-e1dc6e9986cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BuffonData", "[", 
   RowBox[{"iterate_", ",", "linesize_", ",", "plotrange_", ",", "width_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", "=", "0"}], "}"}], ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "iterate", "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Quiet", "@", 
              RowBox[{"Catch", "[", 
               RowBox[{"Check", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"2", " ", "linesize", "*", "#2"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"#1", "  ", "width"}], ")"}]}], ",", 
                 RowBox[{"Throw", "[", "0", "]"}]}], "]"}], "]"}]}], "&"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Accumulate", "@", 
               RowBox[{"Boole", "@", 
                RowBox[{"Buffon", "[", 
                 RowBox[{
                 "iterate", ",", "linesize", ",", "plotrange", ",", "width", 
                  ",", 
                  RowBox[{"Show", "->", "Data"}]}], "]"}]}]}], ",", 
              RowBox[{"Range", "[", "iterate", "]"}]}], "}"}]}], "]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", "\[Pi]", "}"}]}], "}"}]}], ",", 
      RowBox[{"GridLinesStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", "Thick"}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.874736595102194*^9, 3.87473659841728*^9}, {
  3.8747549710826197`*^9, 3.874754986099193*^9}},
 Background->GrayLevel[0.85],
 CellLabel->"",ExpressionUUID->"681aacc6-48aa-4da1-8027-60524be72249"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BuffonData", "[", 
  RowBox[{"10000", ",", "2", ",", "100", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.874561109874795*^9, 3.8745611247557173`*^9}, {
   3.874561158434928*^9, 3.8745611641987123`*^9}, {3.8745630514393435`*^9, 
   3.874563051734819*^9}, {3.8745631427211776`*^9, 3.8745632009230714`*^9}, 
   3.8745634476229978`*^9, 3.874563512546511*^9, {3.874563663280092*^9, 
   3.874563665890892*^9}, {3.8745643871400814`*^9, 3.874564387367999*^9}, {
   3.87456448976224*^9, 3.8745645009493995`*^9}, {3.8745646079595556`*^9, 
   3.8745646080528817`*^9}, {3.874564853015438*^9, 3.8745648590817833`*^9}, {
   3.8745649216168137`*^9, 3.8745649217541184`*^9}, {3.874566314540212*^9, 
   3.8745663146163974`*^9}, {3.874738850434658*^9, 3.8747388568371286`*^9}},
 CellLabel->"",ExpressionUUID->"97c216db-86d8-46a2-8632-5ea311414101"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6], 
     LineBox[{{1.9500000000000002`, 2.6}, {2., 2.6666666666666665`}, {2.7, 
      3.6}}], LineBox[{{6.45, 3.6}, {7., 3.111111111111111}, {8., 
      3.5555555555555554`}, {8.100000000000001, 3.6}}], 
     LineBox[{{9.6, 3.6}, {10., 3.3333333333333335`}, {10.8, 3.6}}], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQPUnFE4jUHM6eAQEeBwYw0HCYNRMEOKF8LYfjhTJA
xA7l6zhY9j226HvMAeXrOWzPvb0t9zYblG/gINGWCEQweUOHqnnPK+c9h5ln
BKVh8sYOPhn6C/e2wPSbODhVc75V3QKzzxTNPjOHcjCAyZs7dHaAAEzewsFN
PLbkoitM3tIBrN0CZr4Vmn+sHcqS1IEIJm/jMD3/57T8nzC+rQPYOxIwvp1D
KBiwQvn2DtsSuIEIJu/gIJ5zUCznIJTf4AAVh8k7OqxeBQIweUeoeTD3ODlM
nwYCMHknh4txoBCB2eeMan+DMzT+WKDyLmjyLg737oIATL+rQxoYwMx3dSiL
vV4aex0m74am383BL7/q8ux7LA5TFfw5P01xg9sHAHldjUs=
      "]], 
     LineBox[{{46.800000000000004`, 2.6}, {47., 2.611111111111111}, {
      47.21739130434783, 2.6}}], 
     LineBox[{{48.75, 2.6}, {49., 2.6133333333333333`}, {49.27083333333333, 
      2.6}}], LineBox[{{120.9, 2.6}, {121., 2.6021505376344085`}, {
      121.10677966101694`, 2.6}}], 
     LineBox[{{122.85000000000001`, 2.6}, {123., 2.6031746031746033`}, {
      123.16, 2.6}}], 
     LineBox[{{128.70000000000002`, 2.6}, {129., 2.606060606060606}, {
      129.3190476190476, 2.6}}], 
     LineBox[{{132.6, 2.6}, {133., 2.607843137254902}, {133.42461538461538`, 
      2.6}}], LineBox[{{157.95, 2.6}, {158., 2.60082304526749}, {
      158.05324675324675`, 2.6}}], 
     LineBox[{{161.85, 2.6}, {162., 2.602409638554217}, {162.15949367088606`, 
      2.6}}], LineBox[{{163.8, 2.6}, {164., 2.6031746031746033`}, {164.2125, 
      2.6}}], LineBox[{{167.7, 2.6}, {168., 2.604651162790698}, {169., 
      2.62015503875969}, {170., 2.6053639846743293`}, {170.37108433734937`, 
      2.6}}], LineBox[{{171.60000000000002`, 2.6}, {172., 
      2.606060606060606}, {172.42380952380952`, 2.6}}], 
     LineBox[{{173.54999999999998`, 2.6}, {174., 2.606741573033708}, {
      174.4764705882353, 2.6}}], 
     LineBox[{{177.45, 2.6}, {178., 2.608058608058608}, {178.58160919540228`, 
      2.6}}], LineBox[{{179.4, 2.6}, {180., 2.608695652173913}, {
      180.6340909090909, 2.6}}], LineBox[CompressedData["
1:eJxcXQlUjV0XDiGEEDJEiC9z5syPOTJk+IgMIWRuVNJwm+e61e1O3bo3QubM
IWQOIYTMIWT4yBzC/5b7tNb9X2cta69bZw/P3vvsc/Z5b+0WrZ22pLqent6c
Tnp6Ff8rFcLzaimu5FU8+tCrfJZhhrK5f/snWtpsGYzrbO3b87eWxjIUePZ/
PbhVzb+0wzIkvTintrbS0qJlODG1s3chP9cs086rpXOW4YJLa2Fo6aJl8Li4
rd8Tfq7nhKZlT1/XNtXSZk6AIuvG8WpaGk6Y/SHjgd5LrTwOTrryi5xQciBg
cqsSLa1xQo2U/vnLa5C/E9qGvJma1Yb8nfDfxZNuA/XJfzmMNn04MbIt+S9H
H58OdScOIv/l+Lfyof7L4dUjTDPfmfovR3LtI2+WRVH/5The9Lq/yxbyX47+
RZH9iiLJfzkGhG4ZXLiW/FfA5PC3dvb83GwFvr+0NniUTv4rkFoYkVIYQf4r
8GXmWmGQ/wpd+TQr8HVgeicTfp7zf58XrUCz4kXB99aQ/0rdz81W4tz0UbWs
h5D/Sph/GTRtTwfyX4mhHXOnB/Jz0UqMnLb8Zjtz8l+JvOkLJMf4ec7/zV+0
Eo9n2jR7v5r8V2G53Yg74aHkvwofZw+Qt1eT/yr42HefnX2Y/Feh5rwOLWfm
k/8qxM1vcf99CfmvQguHhqqIarW0/FfBO/Xl+tSX5L8K0U/nXrC4Sv6rMc1+
/OqOB8l/NeY8ruccryL/1VCPtXu3PJj8V2P0ybuDPieT/2qUDLAP89tP/qsR
k/ngpsFl6r8avTvPN0t8Sv6roZnb1qb2JfJfg2bznzSd/4T812DP4ett614k
/zW43WbvrTZ7yX8N+jfK7dcol/zXoJZ9Zk1haPmvgWtFuF0g/zWQew13Ve4h
/zU4YS1puUFO/mvxRPG71sPd5L8W+m+cPg07R/5r8c+Qm48198l/LSbEDM2r
/pH81+J+Usa8iHvkvxZn6g944HyG/Nfi7hLZvHV3yV/4/IvF3LjT5O+MzU/f
nllWqKWNnBF+LbMr3lEeZ6zIdk800dfiaemMSdusfpa20NJwRleHXaKD1bW0
rTM2HJ+/584byusMUVOHmnb0B2dnhK5eaF/YTEuLnBF1btFeu25aWuz811+b
ammNM3ZsF54uWjrTGSFDF04pbEL/ckbk88OTa3TW0vnO6LSwsTC0dJEz1i36
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
Og73d1liSOJvmy4k3tli3fPkHDHsW2xPSmN8nBVj4fe60j3Mv7libA9JSp3D
eMwTYwieN2rI+M8X/L22YVEe479ADGf/JRvzme8LxZgtGSMMLf1AjCMSG2Ew
fsW6+blYDGnBzGn2zM8lgr7Gt6fbsR5/K8azlrbLzcmvVIiP0gZGbcjvsxjz
z1051Jz5skyMgpa5418wX5aLcaHnAr0TrDf04nXP//XjYby6n7BKMv7jddcz
w3g0Df59fTXXF6N4JDV85jeP+cs4Hs2SL3SdRHuZCL/vuU7UifZqHY/HXT2e
NGa+N4tH7oAlXz9QfvN4fHTwNrhHe1nEY2/F61ysB7sJ8m7aW3KW9YFlvO7+
rW882qSMP7iJ9YFVPGa0a3vdn+v1kHhEbv781r6q/oxHTudLBlbkNzoeX3ep
zY2Jj3U8LNTtwhsSn4nx6H9t4+oS2ss2HmP+dJh+ivl+hsCv52YrJfO9XTwu
SiYKg/Efj1/vt7aSs551iMf7TTXVK4iPYzzsJr3xciM+TvHwX7wmfyT5rYrH
u/WJXaZW7W/isd1r92xT4uMejyWeF8NfUX6veJitKz58kPneJx4P3P+8CGC+
F8VD5tay2WTWv8HxuutjeDzq/+OxoA3Xx+h4nCuTLH/J+BDH42nBzlofiLck
Hp0LrN4f4vohj4fzzbN3fJh/VfHIumGbM5LrhyYef64/yDDgeUt6PMZed4q/
yvOnjHjE5H9eL+F53M54DCnZ9TOR8Z0Zj9tvap+fyfO/AwK/9wvFLZifsuJ1
z+ez47Hpa9OO6qrz93gM/bFW+A3GfzymLTGMmsN8lxuPS/aii/Y8H8uL1+2P
5MfjR0HU9wKepxXEIyG+4mH8x6PLZFnnycz/DwR/uzN2pw3zdZFgb5+2ljXZ
XyqOR+/RY/obMF+XxGNbyrjzTZhf38bjxj++wmD8C/4mmz1pNO31OR57ZKPS
PjC/lgn6y7t/SaX85YJ/yJuPn0j59RKQI6+W8p3y6ydgRePg5Y1pL4MEHM2O
OJLN80fDBN3zSaMEbHMzXl6N/IwTcOSETz9L5nOTBNyVvIu+zvW0dQK+r3Ao
dq06P07Ax2Xy35sov3kCejWYPvkh12+LBBy7tPaoF/HuloCxYdGdjIm3ZQLy
R21L2MP1oW8C5uid/z2B8lslYPrihvtFXB+GJMBZ6RJ3gueNSMCXxx3C9Mlv
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
eOvJdO9/68sQvf6sfFzVfVAZXvQ4NCqL9jeUwbRLs75htL+RDJ4JF8bZV+3/
ZUj97Tsql/KbyHTvi7eWoVzc/Vzdqv2/DHO+nnN8Tvuby7Bh6s7m52h/Cxny
zyjubKP9u8nQ8+zU1ESeT1nKdO+X95XB9VC5ZzH3M1Yy3fvmQ2TY33+lMBj/
Mt37qaNlcBe/nhzJfqO1TPd8aqIM/d5bjRlHfrYy3fvpM4TPH8xX9yM/O4E+
1zNCzPOwuQK9W8/tDeV3kKGBi637C56HOcrQMjNdNpz8nGQI2jz66FD2N1fJ
YNs91iSJ8jsLeBy8s+4t5XeXQS01/vyG8nvJsK5jQ9tS3mfxkSF7zoPg7zzv
F8mw5LQyujbP74NlmHCnzvNZ7CeHC/Z+6zU0g+f90TIYVytJKuN5vlgGlelv
y1rs50tkiIhPkplU9ctlSGlefKYn+1EqGZYdsci0Yb9HI9O9f5guQ56zd+Aj
9h8yZPCbuOnNP+zP7ZSh7Uuz5aPYX8kU/OmSrXox+y8HZH/vu7NfkiX7+32V
7L9ky/7efye/HJluv+Os7G89RvlzZXg3c+qCbMqfJ8PMX/bvf7N/ki/DyU1L
/UfQXgWCvmJN9BL2twplOOF7ZfkWyv9AhoGditZeofxFMvwzrXnr75S/WIa3
L185da7q/8kw/bak3xLa660Mx84Or55G+UtlaL//9dUHlP+zDB9D5u02ZL+t
TIb7XSOvjCW/chnOXj/0VkS89eSQvXOrv4/9O305JN3WiV5TfgM54ld4fWrP
/o+hHLEZ3kvtibeRHNEvfO4m0r+M5Ygw95+YR381kSN0UcBJfcZHazmCNEG9
h3L9NpND9Chkswfj21yue1/AQo6aPWrVuMz46CZHsy8Z7fQYH5ZyYLHS0LKq
/y+H6S/9oMWMDyu5bnwPkeO25b21l1gPQI6Sw0vKvled/8uxJ/f5ha5V5/9y
3f3dRDk03+KWxFJ+WzkW/7p86gzje4YcZ87PHveR8tvJYS5+mWdGfnPlCJ7t
MW0K6w8HOYrb1yj05X7RUY7Rb8XzdnJ9cJJj88E2z+6xvlgl172P4CzYd1Vy
4nCuR+5yWPS2L1jB9chLjsvfWjaVMr/6yLHh5M5vl6vef5LDVjZiXi3WO8Fy
JMps5vdg/RQuh9ezbZtWUv5oOaotPFErgfKL5XBw6975Bs+LJHLd97Pkcmzf
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
Z5PxeYx0gT/rpdxk2EeamYpYj+clQ/RgZQ9z1kv5ybrv5xUkw+7h51cXWV8W
JuNLSsUXsDL+k3Elani8c1X9nwwXxb5cT9azxcmo+DYwk6r6Pxn6tZ/5t2P9
+TYZs51mq3Oq6v9k7Lp47cSCqvo/GQ1ENvorqur/ZJwetn+zJ+vn8mQ8U6aq
w4cw/lXYt9OnsTnvk+qrEHhiTsjJqvpfhXr56Y7XWa8bqhDcb4bsBe/TGqlg
m2jY8g/fNzJWIWL6yZdS7g9MVDjTxPVgD/JrrUL1/BotrQcw/lWY1CnxoiP3
D+YqFCZcywnm+0wWKrSrsbp8qwXjX4X1VzsIg/Gvwru6N0Y58P2evio4jhM1
+Mj3gaxUuBvUQxiMfxXuvI35s60z41+FQTvvyAeR32gVGvVRXF5Eftaqv9+P
Q34TVX/fJyQ/W5X2+88Y/yoUV7yOSH52qr/ff8v3n+aqtN+PxvhXwV7xqIEf
31dyVOHmgxMm9WhPJxVszNTt5bTXKhU0jicOn6K9nFVQFI4Kekf53QX79Kr4
x/hXYXbk7sc1yM9H0OfZs5hY4iNS4eWNtFrHeF86WAXJz+7ho8kvXIW5bktq
u5FftApHxA3n/eR8YhU22rR70pX8JCqUZe+pt5/yy1WwnP074TnfJ1Op0OdI
/8SV5KdRYUCLtYkfuF9MF/BYvzXRk/vFDBWG3X2c+Iv7z50qVL5uSf/LFPxt
4pl1++lfB1TwS5we8oLyZ6lwOLF7nxW8H56twvvE2k/+oz/nqPCP5EmsC/ef
Z1Wo+OspXxiPuSrIJUmvvariX4V8yVp5Ofd7+SoYJI0fK6qKfxWQ1OFzDeab
QhW8kn6lhTF/PVBhb9KdKfW4HhepdM8figV/l0btaMz1sUSFP8eWVx/M9fGt
gP+rgeHHuf6VqjCied0GYP79rMLT0fcSTzOflwnx7Lq9xRjm83IVOmi81Re4
fuul4OyVCR0ncP3TT0HDQyNPruH6YZCC6E2XTUtZPxmmoE78DB8XrkdGKQjx
e3jvI9c34xT0au4mDMZ/CpZXfkEz4z8Fac29hcH4T8Fdma8wGP8paGwS0MiE
9Z9FCibIg8fLWQ93S0GgSXiACethyxR0trphPpD1d98ULF7QaEAW61OrFKhC
bccPYD0/JAW3d8XZH2K9C0HfW1dX92M/bnQKxpfXFx1g/WydgqAOkxL6sH6e
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
2B8q1WC/cbplK973+lgRr/oFb3k+9lmDu9bWN3J4fvZVg2YWm+6dYn+oTIPp
tX8/Pc35fgj554XdmzOcr1yDI7INwtDSv4X1odq3x6t5XqeXhr6y63PH8ryu
ehocB8Q/HE1++mmo/HoS8quVhh5bjga0Zv/LIA3x78PKvvF8sG4aLOe8vPyZ
8xmm4drZseoPnK9BGtb03OL6jvMZCfP5vc+6yPkap+n204zTkBN4aP8pyt8s
DXVqttx7nP0ykzRMC/PdfYT2b5mG5DpPdhyk/7RO031/rU0axjWcPTySeJsJ
8o+2WhZCvNunwcjlz/oFxNs8DafcDR8OJr9Oabgy1dq+X9X5ZJru/e0uaXhR
L2eWBfl1S8PHkp+32vH8sUcaDoUU9f9F/7FM0+13906D3d712Tc4X980mHx7
k3CJ8/UX5DmuV5JB+a3S8LrFqvAI4j1IkN/9TZY/5R+Shn5XV7zyIL9haZhj
UfEbXP/TIApcPmER8/XINGz9H1dXApVT934zhyRkCiHJlExJQrYkZJ7nhGQm
JJnnkFCGDB/RO8/vi0zJPGf8SJIpSaYkJJnyP75f+13r/eeuZd21a+/nPOc5
z3PuufeeW6PO+27U8423XD/1i7d8n71XPE62kZ7/Sfv94+ETdXHKC8Z/33hs
Kiw9+Dr7u388nnrsm3GK8TowHq0WtFunp/2D4zHhpLJKLPt7aDzOegQ9X8l4
HS7a93v8qLkcHyPjLZ8vGC3ibXlXn37UGxuP8IxdH70YXwHxlvdPA+Phm/RO
WYt6E+PRvLn92nLm+7Hxlu/nBsfjYoxHlZe0f2o8ng35u8EM6388QsMfeJ8l
38x4fE36vFxHvtnxOPJ6ps0+2h8i4r22/P5m2j8vHk0fXr23iuvxoSI+ZaWs
w7leHxYPaYmNc0N4Pz5c9M/jDkdGcb1+cTx2Hs3O9+F4XBqPLVt3erhyPC6P
x4ZpvuHVqbcyHg8eb35tQ73V8Zb7q6+Nx+OdW1Oe0v8R8Tiw8XLGA/JtEO2x
Xx91mnyR8ci/9ubPMfJFxePG4FEv9tP/W+IheXL9wlr6Pzoea2dH3FtOvW3x
KPEnrMoS2r8jHg5Vto4PpF5sPNo1Uup7UG93PPq1P/uzOft7bzyCez7sbcf+
2Sf81dV+W0XqxcVjRVPnmnnm50/iMWdXw0s55JOI3//Xaf97835U8aiRE3Qw
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
OLKyXJlJ1POXIqmG9HoS+fpKsc5v1ZhafP64vxT9ogYtTKS/BkpRruixW00+
rzZY9E+7GbIT9NdQKbKn/qg9mv4aLuIxbuPWn+b3K6W4fL9Wmf3012gp2pdX
Lfamv8ZKIffukPec/R0gxV6Xqlu9aH/g/+vviVI06jBPHMXnQcLeh6HiKD4P
lmLb/Wkd3Kk3VYrG9s/fbaO/pkvx68Sa4C+0f6Zoj6u1ehjfB5gttXyfJ0QK
v56LU6Ppr3lSGIa2m+XG9oVKLd8fD5OixKCMJS3Nz3eL/sgedTKaeoullu/7
LJXik3xfcAz1lgt7Fjtv+MbnBVcKe4fti95G/6+WYnUb+z0tqbdWxIvst8cO
2h8htdw/eYMYr4MnHg3m896Roj0fZ6X+4fPcUVJ4Ri6vOoPPN26RYlGmIaYU
8WgpEr2e2+3j8/vbBN+2ytHu1Nshxb7DneUHqBcrxXj1vYU25ufLRf4a5Zkg
Jd9eKYLKx+V5mfeblVq+vx4n4vFybpo39Q5KLd+HkEhRaeOiTt2pJ5Nafr9I
IcXp/Q3bzKG/VFKEbZ087yn5NFI8QvqsftTTSaF7MaRpJvkMUqxcfSszjP1j
kmK627kRr2n/YZEfz/xeO4r+SpCiYEXPabf4/PwxKbbnjS/Vnc+TnpDCa/pF
PODz7olSqBe/yevD5+GTpHCtfmjoJT4vf0b6/74/JLX8fsUFEc+XBrYez+dX
L0mRWyUk6RGfb70iRZlx61ZNM3+vRsSL4lmDV3yePlmK1HJxvUKpd1OKFtPG
hZSi3m0pqhf1WLeC7xfeleJ95o/KttS7J8W5q8a9+2h/ivDnNMfGtamXKoVP
eftqSvKlCf+qypdoz/dF0kV+Lsq3Oky+JyL/RigMran3TIomo95ZH+Lz+xlS
y/dzM6U41G5e1Bk+35slRYhxeAV/ti9b+Lf/9jU3+bz9G9Ef81oGj+D7Au9E
++x/fkjn8/05Usv3K3OFfbvdln0kX54UGwK8wudT77MU5e8Mq/Od75fmi/r1
9EbL1dQrEOP9fTdUpF6hGO8/jg/eQft/iHxt7Ta5Hv31S4pvtff5SahXJPKz
/8vbTalnJUOFcmP0JvKVlOHv15o9qVdahif20oiztL+sDKObb7zhRz1rGZyy
nO7dJl8FGZpWPrdsGPVsZHDzGtfsCf1vK0N6CxdJEPXsZNiRvO5MLv1VVYbQ
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
XyHs2787owX9pZJjZULWl7X0v0aOQy2OVPejnk7kF1u1zJr+Msgt91cxyXGn
jlcTZ/rrsBzO4+MMS2h/gtzy/c5jctiFdUsrQ3+dkCPLabjNLforUY4Nl9PL
N6K/kkS+mzq+3CL664wctytklb5j3v9Kjrn6qSUbU++CHPYDP/xZTPsvyS2/
v3FFjo2xU8XB+i+HMbZ66Rz6I1mOlNgLy7vRXzfF+DCkzi5H/LYca7q9Ch5L
f90V+fzA/C6NqHdPjvW+bkvf0x8pcmze3szpKO1PlWOV+vB2a+JpIt9f6uV4
n/5Il2NkmzW2BxhfT0T/xoRPmsl88kyOOrcWDTxDf2XIEW+9pIsd/ZUp6pPv
0uYTqZclh27FspoJ9Fe2HG1PLS9dlv56I8ZrwYpPI2j/Ozm82656pqa/cuS4
NGv1jZ/0R64c/uo1J/pxfOeJfJy1Vn6A+eKzHMMbRGz7xPXGfFE/wtafTeR6
Y4Ecl5VhLWyIF8oR1+xT51Ty/ZAjIqBs0yZc3/wl8ne/VfU+M18UyZEzK3+9
D/WsFNi3ZcrnbeQrqUAfY/rYl+bn/xT4eaff1Xbm5/8U0Oada7OW6/fWCqxR
O5Tvz/X2Cgq0Wtzoy37er7FR4LG/69MPXL+3VWB9nfZXu/B+gZ0C777VXF2O
eFUFrvV6fPCe+fk/BTq3PxbZ0Pz8nwIrehqjPnD9u5YCshFXCjpRz0GB61Oe
BkaSr67C8vkaRwUmZZfZ7Gxe/1fA7ZhX4VzqOSnwfd2cSWfN+xEpLPcjdlHg
Tqr7onTyNVVY7k/cXIEDwySfvpr3K1IgqPvPp5d5f8JNgfe9wm9WId5agXn9
vyaOo15bBQqHzFOrab+7wnI/Yw8F3l5aIg7WfwV2q+vt3Uk+LwVe3/+smkK9
zgqMu1e7eifz+r8C6fmHnlY2738i2tfncYls8/q/At7KYytPc3z7KnAvvndR
GeJ+CgTve7Kkv3l/FIXl+rm/Aldj64yZzfHdV4GKp8fV6Mnx0V+Bvq2c924h
30AFNse/q5dKvsEKWFc86Wk076eoQNW8W9qNHG/DFYhp1i9sMsfjSAWSm+St
1TK/jlaglMv27Z9o/1gFnmUfTrrFfBGgQMnJeZ20HN+BCvhdejQ4j3wTFRhZ
eFN7m/kkSIFRkU17ViMeLPrjc6A4WP8V2OMxSRys/wr4y0NkNYjPVGBq/v2S
hZyfzFZgxpSjR9I5/w1RICzk1cR6xOcpUDro1Tsr4qFifN2Jqt+d+StMgTmK
zsubcD4ersCrhgNaVuL8frECbRw+tsg3f+9NgR11ei16wuuh5Qp86HHvcl3i
KxXoGTK26jheT6xWIH5vdsB+8q1VQJ8XvXkdryciFGjd6HX5Obxe2qDAldC/
E1LWfzGeXRVHdlMvSoFvLT4OWGu+/lfg4fGDHeaar/8VyC79btp48/W/Aj45
vTP28XpvhwJx99XD03m9F6tAWy+7zGvm638F3jx2yChjvv4X429Z42c+5ut/
BYbXb/1kBdd74hSI7rCp12yuXxwU+WZ+xaJx1JMoUOVGSZu95JMp0MGjzrZI
8/W/AlN6D216xXz9r0CKzT/Lj5uv/xXY/7mnOFj/hf/WDbmYZb7+V2Bse8X0
+sRNYny8KqwymnqHFZbrlwkifnzjAu/Q/mMK1MzPK1eB13snFLgs7W70Zf8k
KhA6JHb4CvN+N6L//SqumsP+PqNAk93tD6nN3x9WIPHt+Bcv2d8XFOjXKbKK
I+PrkgIZUQndRnJ+f0XwP3s2dxvj9ZoCwzxjo1cxXpPFeMi63vsU4/WmAk+j
f5f8ynp7WwGnLm2S3Mz75ykgX592uh7xewr0b9rTagTn7ykKxGZPuOdHvVQx
PlLevOtAvTQFBvrb9W7O69V0kV9dRzadSPufKCzXC5+J/Jmw5Upv+itDxMtK
ryVdzdf/ClzcsXWeh3n9X+TTHb8Xz2Q8ZytQ4mWBd5B5/V+BM4Oa3tvD/nmn
wNJzoybfMX+vU8TT/LUrr5IvV9SPBtuenGN/5ymge/F43VfyfVZgg6Rxq+bU
y1dg8qQ5aQHs7wIxPpxPrtpO+wsVcHxVssU19vcPBbLe319xjv39S4HmQ+cl
5LO/ixQISbJ725T+slJiSO22OxsSL6nE4kruq+pQr7QSSS1sbvWnXlklfvfO
qrWaetZKeE9NCjpKvgpKy+9b2yihivGtmEn/2yqRGVle/oR8dkpMdnpsXZl4
VSV8p7rPqmD+nqgS8jH+4zpTr4YSZQcE9ptNvVpKTPEJ63KQ/e2gxNX2US3v
MV7rKpG4KKTELa6vOCrRZsKPZUWMnwZKKHut/dGK8eWkRKwuqHEL4s5KlCq1
zW0s49lFibmjznbYzHhtqsRzYw7OMF6bK9GvrIP/R9YPVyXicne+esv5qJsS
Z16NEQfrvxIvqgeIg/VfidJ+geJg/Rft2V7Z3Yd6HkqE5vtkzaWepxKDSy54
Opv2eynxbrZH1Vm0v7MSHVSXV82kv7yV+N5PkW7eXw1KnP/tVvUf+t9HiaMX
267ZR//7KtHes07hdfrfT+C6UrO+mb/XLfCGOS+cqecv8J1/P2DL+i/wCqdv
rKD9/ZWW91sHCvzL5qPp9NdgJZ5tG9g9nf4YqkS0cbVfOeLDlZh9//c/5YiP
VFp+f3y04PPvnleR7RurxJE50R/M8RWgxJV9x1t0YjwEKpF2/dm0YNo/UYn3
BWVUMeQLUqKoUcvsJNofrITdoKHOb2j/VCUaLV8ysRrnE9OFvlZy0JvzhZlK
9PpPgPVf9EcN2yjz+k+I0nL9ap4SHe+2vLWbfKECn/uy2UXyhSmxqOqeiA/k
C1da7u++WIn4PQM7OxBfqkTnPQk36hFfrsSxMGPPntRbqcScpwf29aHeaiX0
TZUug9i+tUrL/eAjRD6Y0K3KSvp/g9Ly/nqk0A8zTbtLviglbqj/2Dwk3xbh
z2ZJL5+RL1r4722LD6/p/21KVNzoccOW+A6l5X7ysUrkHdlZtiv7Z7fScn1r
rxhfhTuzNlFvnxKN68QOOcz4iVMiqkvshTTz/X8lvoyPbfOH/pAoMXp17MHG
nD/KRH56NDi2JXGFEoqrv057sH0qJQLKzB4wlv2jEfE19lrHYOrplJj0O2Hs
JuoZlPizP36FyXz/X4l93lskDzi/PSz8O3fjvOfkS1Ci0tqf896R75gSJ22D
xMH6r7RcP0lUwj63aIj5+YYkkQ+mbnvoz/45o8T0Q018Zpu/fy3i/XuSLoZ8
FwS/k25NHPkuKRHi9maDjv19Rfm//Vjo/2tivD4VP/R/stLy+/Y3lZb75d8W
+b9/bscqHI93lVix2qV6W+L3RHsdKjj2YL5JUVrup58q4n/I33+s/yL/6T18
t7BepStxeVrFdD3z1xOl5X77z5TQZSaU+UC+DCXqH9j4jw3jK1OJbWMC2riy
fVlKrN2pdwPzSbbScj7xRtQXrX21UNr/TolBoXsKNlIvRwnrhVt6qaiXq8TH
TjvfnKH9eUrL/fs/K3FQWatFPu3PV1ru518g/GNdYaQL5xuFwj/z5jTpxvns
D5EPdjyvY57P/lKi8hWd+2LOP4uUKHx4fvdOzmetVBjkfG36Ed6fKamCZnxw
0G3OZ0urUPKf0gFvyVdWhS8xccvLEbdWYcCGShdceH+qggpb9PImPXm/yEaF
pT/SMwN5f8pWhRo7G1qt5v0iOxVuzV0/6B/eL6qqwpr+HyQJ5LNXYeSfrEqp
5KuhQlI5+ddc8tVSYWDa5ZpViDuocG5r+dhmxOuq0LpnP3sfts9RBd8mH9YE
Ua+BCrrCp7uXUs9JhYy2TmcPkM9ZBQxPKH2J98NcVMjzWtLzMe1vqkJBl8c+
VsSbqzDnfXLdmsRdVXizO7GgJfXcVHhQLct7CO+/tVZh/MSnskXc766t8K9i
j34r+dxV2PB+2DE5+TxUuJd4ZupN3n/zVEHR40eHfO7n56XC1g0uIeWJd1bB
s/6aL22Ie6tQpeqWbWO4fx9UaLo9vm8E9/fzUcF/u0u/vdy/z1eFsDsVEy9z
fz8/FRrcfIjP3N+wlwrHGmdn1Hdl/VdhbOG2Pf25v2JfFcr0uPgrsAXrvwo+
fouDo7m/4kAVKutPTpRw/8TBKjyt9j0ggXxDRTwu9hxzhXrDVVj4YuGINO6X
OFLEi+OmLuWIjxb9vbnE/VrExwq+nwunNmf7AlSInJ77uxPbF6jCMK9/rk5n
+yaqMHl9SMES7k8YJNqf0qPxZvorWIX1DesMjeP+glNVuCHRl7hFvukqHNhc
Pvkp9zOcqUKh1dymlYjPVuFJmyWR9YiHqOBxK2hPP+rNE3oPfHeOo16o8O9T
55hZ1AsT8faq9OZl3P8wXPx9btaGzezvxSr8sS+ofpr9vVSFb7Pva28yvpaL
+L1m6vaE8bVShdo2XuJg/VehxT8Hynah3loV/HQf7vahXoTwj23J2cto/wYV
bArS6ptof6QYL7Hu9c/Q/igV5ntEO94k3xaV5X6h0SrM3d4swYb4NhW2bffr
70C9HSoc3j7pTRO2L1aF8BbTr41m+3arMGp7zaQt1NurwuJqrlH/kG+fChVn
13S7S704FQIabM8sw3g4qMLv9l5vqxCXqLCvz4uP5v6RqeCdNuzDELZPIfLV
kJm/IhlfKhXqToRXLPk0Kuy91qLgFve71In4L3H3Thrjy6DCot7wrELcpMLM
ko/1dYgfVuHUqJUXhjKeE1SQ3++QEkC9Y2J89/v4air1Tgi+q4pv82h/ogrN
pxzP05IvSYVdHbt9f0W+Myq8yFTZNeT4OqdC3LIhHuM4Xi+o/rc/nAvrvwrz
ulpr0rj/6RUVrM5HTslozPov/L9p/aD6xJNVULu11rkQv6nC93/Tyrpxv9Tb
KpSImt1hljPrv4jHlxNbhVLvngrPOo1osoT5IUWF3s3XxCWSL1Xkp4Q37c6T
L02ce/e/fpX2p6ug3FNpfTniT0S+PV0+sRLxZyqUzizzoRrzUYYKyanDPg2h
XqYKbVvPtdpJvSxR/2ZWmLOXfNkq3FdKnx4g3xsVZC8795WT750KkkoHumaT
L0fki33efd8zv+WKv2+U9tqVeJ4Kb09U3DyHep9VsK7WJHU+9fJFvVt03+k4
/VWgwon6VcN/NmT9V+FCr34PUJ/1X9Svrx4/uhP/pcLJl0m/Nzqy/quw51JH
63/rsP6rUdiw8oz79Vj/1RixIuvWA/KVVuPYk5Ot08hXVo3qXlu3p7O/rdVo
+N8P678akfWrHZ1KPRs1yrcLHj69Aeu/GrXO7dl6mHp2agR3mXj3CPWqqnE0
sXmVo+SzV6OU55dBx6hXQ43+RwbOKSJfLTW6PTs84I8T678a7uWrt7aiP+uq
4bTReVsv4o5qOMf4Vu1NfzZQo/a2huJg/VdjW8gS5ye031mcz1mT9Zh6LmrM
v/Rpuwvxpmo8TGiU35h4czU6y4cNbUw9VzXid65PcKaemxo1743pNYd6rdVQ
DIl4nki+tmoUnViwqFxd1n81mk36lViGuIcaN9Vp3waz/zxF+14t8Yivxfqv
xvqsYWF51Vn/1biTmXoM1Vj/1dCOqbG0C3GooTv8ddyWqqz/aix5vuRSpD3r
vxr+NiVbrK/B+q/Gui4TBqSRr5caPcYNGpFCPn81rMbH13Uh3lcN6/2OVxoS
76/GkV41XUOpN1CNvTP3R1+tXHw+WI3HDnHLLlQpPh+qRr3rcdNPk2+4+n/f
7yI+Uo20g52OTrYtPh+tRtvVfbLH2xWfj1UjatKYmqOpF6BGtu+MXkPZvkA1
4LJkUX+2b6LwZ89zUgn1gtQIy3e78Y18wWpsbf0In8g3VQ3VzDXH3pFvuhrH
V8fUB/GZaiS/S+rQkfhsNer+9wHj4vMQNXKjT3bPpv3z1Gic2z/+GfVC1XgZ
vbm7B/EwNTJPXcrYUrH4PFyNpKP91kZUKj5frEasMbXJcvpzqRoh6vE3FlBv
uRjfg6L63ibfSjXOb/DZfpl6q9Voca7wURLtX6vGzm+GBgm0P0KNElnVImyI
bxD2bKwdUop4pBozG9eYP5Z6UaL9IzZbDaE/t6jRJLL0lt6Mh2gRT0lL6qBm
8fk2wZf7WeVRu/h8h+ifhtM9WjLeY9WIG/LiYiPmj91q/LddhEPx+V41/ntd
m+NnnxoPOjUpnMLxEyf8WaZtswCO14Nq5N3pPHoox6tEjL89PTf5c7zK1LAJ
GpwE1ieFGg5u4z54MH+rRHsEe0vmd40am2r3sF7D/K1T48T8Mk/DWS8M4vev
d518h3wmMb73PHx6iXyHhf+nzRmeSL4ENVp2LHfHyHp9TI1W5Q/0lLOen1Cj
zSOPc3s5P0hUo536tmc05wdJarRfFHxoHecHZ0T+nrfVmM75wTk17p/0VLXm
fOSCGpWfZE1tTPySGpPmn/+zhHpXxHjrqwkKod41teX+7ckinsRvj6LeTTU8
HgVt78f51G01HPf3PirlfOquGq2vR5/ZxfnbPTV8vj68uonztxQ1tof1cs0k
X6po3/LK6Q/IlybsX5e6/jrng+kiP2/e3/4057NP1FhVzVMcxefP1CjbKv/y
dOplqDFqSu9SF2l/ptBbMfLAUepliXy7a0onFfWyxd+bwh7uJd8bNbpeWzd/
M/XeqbEoY0fllZxf54j4Wl99+UPOZ3PVuDb1clYrti9PjS7eVjcaEv+s/t/+
kJzv5qvh8nbBrjK8XixQ43VF2atx1CtUw26ey9wB1Puhxj/bMVZFvl9qJG5v
sXkP+YpEvduQY/+F9ltpLPunpAaFGWsqexMvrcHigMJme+ivshr8MWb22Uj7
rTVYW+LWrEXUq6BBxYavrqeQz0aDi8tOxVwin63gS48ZlUD77TRYHeP/rTLx
qhrscvCLnEk9ew0uRA6PG0O9GhqELx138wT7p5YGE/49FaGknoMG/i4O3czf
H6irQenXw01fyOeoQf47VbXBjL8GGiTf2TT9EOPZSYNyM2JrHTB/j0ADq+3D
yv/h+HDRoP72VgE5HB9NNfDeXv7II/I112DL2EFZHYm7anD5q0OGC3E3DT4+
StOsp15rodfqcL9Q6rUV/Gs35QWyfe4azBil+3mefB4aXD2xubAR7fHUoHkV
fXYE84OXBtanF6yYZ/7egQa2CzLKpHJ+6q1BXKKn33l+LwAauFnFROjI56NB
u24Jfe3M30PQoJvrx5ILmI/8NHg175wqnfmtlwZhjZRdunG+5a/B6AZL6rUg
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
jxxf97Sou6THs1McPyladG/WJXADx1eqFvPtsxLqEk/TooWdX/oh8qVrMeX4
9zs9qfdEtK/2jGnViD/TYvPSJyWfUy9DiwbP++3TkC9T+K/b2fZh1MsS+UfW
+k43zkeztVDX7Fn1IcfzGy2uR0wPkDBfvdPizdfNmlnMfzkiP04+VOBpw/ov
xk9Kik9prr/ladGre+GWO1yv+6zF9yibBkHMj/la7C3zy7EV8QIRz8vf1/vB
64FCLZ4VpNe9zOuFH8L/c5LrRHM97pcWTm9OOozh+maRqDeB6touvP6w0mHy
o921PvF6pqQO5QZvqJnE65nSOvi9y648gHhZHXqOTTpfm7i1Dn32/9NFT74K
OgTF6DZ2o56NDqrVEfJUrv/Z6rD0tyrkIK937HQ4erh1ZQ/iVXWwDzq4+Q/t
t9dhXnU7m+vkq6FDRdXCjADitXRwO5i05ivXGx10mHammjhY/3VYNn/qlmHE
HXXwN4xq4ki8gQ4ND228fZT+dNLhXrRbneX0p7MOa0PuT/GjnosOjjELfZ+R
r6kO2WPP54axf5rr0DanttSbuKsOU0Mktx+yv910+Jj3w+MA9Vrr/ve9QOJt
dSjz/PLY+6yH7qI97ae33Mt48NDh5ibbokDqeepgKKij+8n48tJhbkl3l12M
v8467P2QN6Md49NbhwFeH5beZbxDh1OqEfVjGe8+Omwc/czYjrivDt/L/v3H
+q/DgoYPa+xi/eqlw8w93/Lac3z567Ai6+uOB8wPfXV4lTirZBjzR38ddlz3
aelFfKAOPmk1RxZxvA4WenFFhXHMH0N1eDTRShys/zqcdCkpDtZ/Hd7XGrH5
KvlG65Bae1zzadQbq8PPE6atFZnPAoR9V3OTDMyPgUJvRMKhwcyPE3XwOhM3
69uX4vMg0f83D285+bX4PFgHj62eVwOIT9Vh0y+PK6U/FZ9P1+GYY99N2tzi
85k6jESNGkNyis9n6/BtUoPK9sRDxHibFF496X3x+Twd/vmUnhH0lvVf9Kft
6xDb16z/Orz91unyiSzWf4HHntsVns36r8Oss7uDGxFfqkOFISc+Zr5i/df9
73uWL1n/dTjT8Fh4P+KrRbyNK935eybrv2jvoYkX5Bms/zpMnz+34pBnrP86
GP/NmVOFeKQO+a2mptx5wfov/Bn4od+y56z/OuTNXzKtE/FoHZTry68z623T
Ydw/uw4ep/07RH/fO11iMvFY0V8zwlKciO/WoUjzxnCXfHv/X/v26bBhzLyo
zsTjxPhWLY1/T/sPinj4KF34zxPWfx1WZW+07ZvO+q/Dl6OLw6yJK3TIvbho
3clHrP862DXZPnTGQ9Z/kS99pr2s94D1X5wfjWvz7z3Wfx2a1ykKj0ph/dfB
dtW4cz1TWf91SFj694N3rP86OE/9vsj4L+u/DtVD97WZTvyEiJ+VXd86Uy9R
h8JNmQefky9Jh3e71o3cm8b6r8NjaVO7YWzfOZFv1reSWRO/oMProTXtL7J9
l3S45vRnzbLHrP86qPOyv3R4yvov4v/M7Umf6c9kHdZPStklp79u6uDuVuvc
eOK3dcgoHPOmNuPlrg5RFw/YpbB/7v2//ksR+WNkkwm9GJ+pOkRm//zwg/GQ
pkPs08O3ExgP6cKf5U/cm0L8iQ61WzjurEO9ZyL/lP67AXLxeYbIHzH7hqxj
+zKFvyr87t+J7c/S4VaD/je+0F/Zgn/E/s4a+uuNDltuvJ87kfg74b9Wv0bW
Jp6jw/ysgJ7/ki9XB6s959tvpF6eDuNvRvcB8c86jNrl+OUb+fJ1OP95+nIj
+Qp0UEQYLk9h/xYK/z1Ife5I/IfQc/7z/QH5fukwen4T+83UK9IBFwa4+bL9
Vno0qRLe6yf7p6QetoEHJx6mv0rrkW+4tnQa/VlWj9HdEmIaELfWo9nhlRPT
yFdBjx2j4z5u4Xi30eNPyaSlPdi/tnrM0D4q/4t8dnqkDvkWe5j9V1UP38NJ
5acTt9fD/VfYwAbEa+jh7NdmVyrjoZYe9tHvn0YxPzroMdR2UEdf4nX1CNly
puMP5kdHPTbZunqZ3hSfN9DD6vuOS1OIO+lRpePN5fWIO+vhtKhUx/vMxy56
RByb8zmSek31WN1+fTCIN9djxOc/OwrJ56rHZGfbi3ryuekROrzup4nvis9b
67FmQ/P6tVgf2uqxLdGz360PxefueuQM+vtFxOJzDz1mHbxf1ou4px4fc//+
FJ976TG3S4WH0rzi8856ZEdeiRlD3FuPJUPLuNsRhx52jr6pl1i/fPSQvV4d
voj1zVePjofOO7ix/vnpcXux1elM1steekz07Tp+F+upv2h/3apt+xPvq8er
hMgtJYn3F/6N3ZlqrqcD9bjlF/BhFq9HBuuxrnWopjHxoXp86yBd8oh8w/VI
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
xoGfiUx9HcrYlgBeRqbGm4InEXBTmeKDzPjz77msTDdvm/Pn33M5mV5WrMCf
f89mMq1bFjt4kr7/X6ZRryfaiej/8jJF3TCaWhr6VpDpzZo9pt2BW8jUrH2n
E2shr6JMA53TS94HfSWZXudXWV0FeGWZCr5Xs5wKvIpMLRd+mXMQ/KrKtC3I
2eUH7NVSpltnKi/vBXuvJlPe997+fsCt+PlDl5K6P1eX6XSXFc+bwV9qyJT0
7EXt1fCvmjIl/J129jz8y5rp63wd/Rf0tWRSui7+1RnyasskTCzauQzy6sh0
Yo1fu3joX1emo/stHuRDfxuZDiTt9GmH/qwnU5P9z6v4A68vF79fq4FMnu1W
zq4JvKFMUucLp+YAbyRT7stXwy+gfY1lys/9PbEI+jXh/jSuMssZ+tjKZBv+
umkwcDuZTIaNH/QW7bOXqYzD/IoNgDeVybT8xtsTIa+ZTGuuR1XQ74drLtPQ
RWeP5YC+BdtbvaeurSCvpUw/r/9K1+/naCXT9UXVl8fo+/9l6hibu6kI9K1Z
f0/X30Mgz1Emi4UhfYOBt2H+azMib4FfW5leOd5s0gB4O5mGuBVYLoE+7WVy
KYyorYBfBx6PrbX7lAPeke31c04zN+CdZKobYNgZifZ1ZvuudWNYGuidZDo8
LamwBXBnmSaerB0+C3gXmax/LHY4Cn5dZXrofDflDfQjmYI3NPOoh/Z3Y3+9
ufHvONiDC4+H5csd+v0T3WVql7o++SvoXWVydG/RuRnwHjK1uvfo1HR9/79M
LYataXgI8dRNpqaP7He9xPvMXjLtamfBn3/PvWXamXW/QH8/2Uem4ZPaNbkK
fn1lunyjwdXawPtxvJmjXveBPv1lCj+THXsK+g+Q6ULZ5kGZoB8o07eXbWO7
AR/E+t/8NNMXuDvTz3p/Wb9/Y7BMKyo7rbPH+A6RqUJc8v41+v1UHP8srHPP
oj+HyWTmNbf7T9APl+nOftcVA4GPkKnX4VpWRzA+I2X6bB5X5xX4jZJpQUXL
/I7AR8vkFzT0yQLgY2TaXTHs3CnwGyvTowV2p8oAHydTZ6/aXi7Ax8u0x7NS
c1/oM0Gmi/cftn8A+oky+QR1O9gc8ib9J0+rOV2f/8vUdqbPpUTY1xT2hw27
UmvAPz1kCvoo/h0CfCrHq8dFPfR6YJpc/LwXT5nU319G1YO86RyvtrybMgby
ZsgUW+vFnO3Qfyb7R+yDxanQf5ZMB7vcXFMW4zeb25d6aYt+XtMcmfZvDuwQ
ifHzkmnHztl1HoJ+rkz+B/sY6fnEWyZfwfZTb9jfPJmOnzMJ2A9+8zk/hNzr
/wz0PjJZFr1v1hb4Ah7PNzEpXsAXyvQi4e27K5C3iONrwdGJJfX3/zJVHpMf
P1p//y9TaKuLFmH6+3+5+H1pyzh+p1GUG9q/nNvzqvH3feivFTJlFHRMf4L+
8pXJzrL/NT1/reTxbTFR6qe//2f7zh9RQj+/ZzXb7+7Q5HT9/T/n0y6pAfr5
NWs5vrwsN8Qd+q+TKWd9zxqb0V/rZepiuzZdP/9jg0ybr587VID1EBs5Hu6f
sWIYcD+ZHIwf1gkEvkkufj6kv0yp105OKcL6is0yNbI41HIU8C2sz9DWYyXw
C5BJXtL2Y3nos5XjZ8epNj2BB/J4FYSNWAl522TqefZSoAp+QTIt9s27/AXy
gtneujT82xjrPUJk6vA/F0j/ew6VqV98WN94rA8Jk2lCtiV//j1vl8m+oKrU
F/gOmeuzr/vXAd8p0yavSMcX4Bcu0xKTtCJL4LtkmhFteaM/1qtEyJT55+rC
o+C3m/PHkrl1MvTzzTh+5lpescJ6lihu775U//nAo7ne+RJx4ibk7ZFpmH/z
CsbA98o0+N6sOROB7+PxP7Q6Zifk7ed8snj7x1ugP8D5v/fxJiaQd1Dm+nbC
iknAD8l0JqZwRzj0PyzTx5QoIRX0R7g/PjndMMH6q6MyuZZ99s4Z67OOyTTf
dnnJhVjvdVymvW41a53A+rAYrg+nxbd7jfVhJ7j/nnXJdQYeK5P7WO9PC4Cf
lOlK4OLXqeB3ivP36u6aCfA4zi/zLLY4Yz2awPl18tPxC7CeTpRpe1x4/1TQ
SzL1r1em0Bi4LJNRyMKTTlhPp3D7S70Z74P1eSq3x2ewxXGsv9O4XihYddsI
uEGmheV8sieAX7xM6QXl5p+BvNMcnxoEG7Kh3xmZxv+Zu1Bfb3dWJuNEQ/g6
4Oc4XqwreTYe/M7/V3/0Sf8K/RK4/ioXWqox9EnkeHnraaOxWH94QS6+v/si
58thc2ZfxXrFJJkadnQJaQD8EvvnrmEho4BfZn/qvzpPBr9k9k/JUq0IeVd4
vFwezu0J/KpMK33C5+xHf1zj/LWts9Fj0KdwvXb8RUR5yLvO9e7JI8IM4Ddk
mmwe0kQ/3+OmTPd9fP/U1/f/s/1+zrcbCTxVpkiv5E4K+us217fe445XRn/e
4froeuQSb9jLXdbH0+PQLdjrPZloj5VbaeD3OZ48SvnQHvb3gOuJdV1a7IA9
P5Tpql25u3lYL/iI22NdtoUd8Mdcb1cw3TwO/NJ4/lWizLtg8Hsi08YcY5dk
6PeU8+cbo+jf0P+ZTG8flv7dAu17zv5/rdTwKejPF5y/bSZ7XEB/pHM+PhsS
9R30GTJ1HZX00A79+VKmS99zLcZjfF79H3t4LZPBOt7+G+jf8Pc7R84cAHlv
ZZpmftI0FvLeyWQVf8vIHPq+53ph6Yvxs9C+DzJll/b9FI32fWR7DbRedBf0
n2SKyzrzwQF4Js8Xg6358+/5M8fDxzXf6/fXZclU6UhOuUbAv/D8cWFKi5GQ
91Uufp7RN84n/v6LMkGfzfONvR/y+wLPkel7Y8PDlcBzeX4Y66cI4JfH9V2b
EWFvoN93mbyqHTLrAfwH1xOVumccAr98zo9nKlUuA31/ymSeE+jfEfgvzg+R
5X9EwF5+c/wq2pDwB/G0gPv38eO34xFv/3B9nv1u+gXE77/s/9blR+QifhfK
FJG0oOpw4EVsn9UmtYhHPiyh0ARj6WAt5MuSCn0I6rt4NfJ9KYUKgrY/E5Bf
Syt09anDR0vgRgpVzx7RzA24sUIzTFbOXQJ+JgrFWx8Uj0FeGYXKOaR8f4L8
a6rQ6J7fOphD37IKxYyptsIZ7Sun0B9vpwQvtN9MoX4bJ5fai3xirlDU7k09
7qC/yiuUFXdyUyn0ZwWFuiTfv+6I8bNQKPDp7wpTMT4VWV7NoS+ugL6SQj7v
xhX9BH1lhTqJnjb2GN8qCpVaOa/bGNhnVYWu9V4+OQD2bqlQ5pNbxl9BX02h
BwVJRjbArRQyLzXi1Vrg1RVqW7VrggR+NRQa37hJ5BvQ11TIr4PFUkv4l7VC
Napd6bcEeC2FqkjHyhyDP9dWqPyggItpoK+jUJksL99y8Oe6Cj0cNNptDnAb
hcRzM+fcBr96Ch30WPPVEfrUV6hS/TWuHsAbKLQyffWuMMhrqFDsyTjHn6Bv
pFD2WIPdWLSvMffv8OxOAcCbKDRtkH2/s+Bnq9Dlip1H2wC3Uyhx8fek9Rgf
e4V6PdoQrK8Hb6rQ7XbVJrwBfTOFRu443Kwq9GmuUMb3dr+7o30tWN8JIzsc
hbyWCvWfYHRXj0etFDLpVG6sE3AHll+14rtZ4Nea7amRvPM26B2Vf/3277kN
9/+TvtNbQl5b9hff9w5h4NdOoVXdbw//Bf3bK6Rcfv9wPNrXQaHnG1s/2Qq8
I/Mbfj40F/bXSaH8wtkL6wPvrNBPw7jpm/TznRXa1MZB/YJ44sz27Xxt/DD4
QxeFhsSWmXwW/tNVoaUzbyU0gH+RQnnTixZvQXzoplDLmH1Ben3rohBdV9fU
A95dodWfvy0ZCNyV+6t8U29f8OuhUFGLqZ4xkNdTIenK1gFVgLspFG7v2VC/
H7SXQocGe7geA7/eCo0d8eanfp5fH+6PsR6xRvD3vmxPWfffzAbeT6E2Kf0X
6efF9+f22jl8KAV8gELzN1Ud3QryBioU/D7/+jjwG6RQXM+nzlvQX+4KpR46
f8qA/hyskMXaO3k2wIdwPEp5EOoPfkMV+v6+Y5IKfsPY/5yeR9QFPlwhO838
WD/gIxTq2dpJWwp+IxWaEjvr8mHIG6WQYaxrqAXw0Qpt9eu52gn4GIUWXDm5
8RD4jVXoQnf1XQXIG6dwvvUJ7gx8vEJeLRycpuvn/yl06cCXd2H6+X8KWdc4
EXwB8W+SQvMCZzh9gX1NZvuK8h00Qj//j+PZ0QZP1gH3UKi+fG1KHOx5KstL
mJv1DPY6TSHvT0/z9Xzoyfb+4uqYU+A3ne0xc9iBp+A3QyGXgINde+jnaSs0
s6jltHnAZykUMv9MQJR+vrZCZ972lK5B3hyFegTk9nAE7qWQenh93wnA5yrU
5IKl+xb4s7dCu54eHq7BX+cp9Co4IV2PR/N5fIPHXeoH3If9odrVDfr54AsU
+tR+We9XoF+o0K3IJt376ed183hPf7ddhf6LebwG7OpWTz//TyH/Sg16BmB8
liokr5x2IB/juYz7f8nHi/WBL1do8UXTkYHAV3A+rnJ9eDzG21ehF0u0Bo2A
r2R77J9YchDwVexflWaZnIV/rGb8hPcUW/jfGoWeNJCrb0d+XqtQo4DqjUsh
f69TKNdozZa5+vxfobenb/d6jt8LNijF75fYqNCyyLG+Dvr8n/PrcU93/fzn
Tezf5o37XgO9P7d/zhvXXP0+EYXqrTjechLwLQoNz6k9PxXyAhQa5PvK/hf4
beV447HgoCfwQIUCDiQ76fcJbFNo6qvqD06DX5BChRsGTrUDHsz1xNucfuH4
vSREoe4L320pg99HQhUap5Svv1i/n0ShhHHPO+zF7ynbleLvo3bw+Hv1/9MB
+E6FBsT/KNJ/jw1X6Mjglg/vgN8uzi+fPU/81u8z4fy2Ye/aBtBnt0JCnbSR
/dC+SK6nDJVa6vd1RCk02b2PcTTaF83+8Wnt02T05x6l+Pnhe5Xi58/uY/t9
T4l+wPcr9Dc7cmA++B3gfLRl9Nu6wA9yvm9UfXkv2Mshrn8SHlSch3h8mO1j
VOjhXbCvIwql5w5yugj7O6pQ37d71zgAP8b+O/5T7X36eer8/KOXzzXwi+H6
cl+fnh2Bn2B/cli/fBLwWK6PLp6L8we/kxzPBue/FSDvFNdrr1pZ6/uF4ni8
fGYOKgX/EjgelT64wR7xUeR87Rr/ZRf8R2J/Nzp4siy+Lyvkatbr8lLIUxQ6
PcApYh/kqQr5dl7wvhJwjfu374TIjsANCtUd28d9EvjFK+R43Fi5A/rT7I+L
vvT+BfozCq3t/uiFDfQ5qxTff3VOodAypW8ZwO+8QmfHGVbaAU/gerbspQ0R
6K9Epfj+sgsKRf9s8bM18IsKLX8zpPxo4EkK5bz4ufo6+v+SQk3rnuzjDHu4
rFBz35o2HsCTuZ54uvH7ZvC7olCrjrkpAvhdVaj1zgl7H0O/a/x9zwvUB3gK
x4fUMT+8gV/n+qfdj5idaN8NjnfRQZPOoz9uKpRk0tTqLcbzlkLHvC7fMEO8
TWX7vd2goS/w2wrtPb3ijr5f7Q7Xlzf83CyB31Woj3mppn7A77E9nR64Jhby
7v+ffP9AoUfH6pYLgf4Pefwrl6lngP6PFGqw/Ev7F6B/zPH79YMB+vm1aZw/
+52bqtvfE/ZX5eCKQdD/KdtX7YDQRcgnzzg+TJsf8QH0zxW62azox2jwe8Ht
v1mNP/+e0xWalGvFn3/PGZx/xpTrPQ34S66PXEdsTIP+rzh/N3tdvT/G7zXH
806d588H/kahdb1Cr+9E+95yPTHXZYEZ8Hc8viNrnmwF/D33Z7ec98Mg74NC
ab0uHb4G+o8K2d+uf+EL6D8pNPu3vzIZeKZS/D6Xzwp99q4W1Rf2l8X2Nchh
lDfwL1wvtexnuR36f+X5aAXPO3p9+43rpbWdprUAns3xdH7SwAPgl8Px5Ni7
rdURH3N5fP5usglEvM3j8R60rYwR4vF3hY63t2xiC/wHj3+d3T37IX7mK/Qs
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
v40Bv/MqlRt35PZC4AnsXxWG1/kN/RNVuv/G/WUV4BfY/s70P9gc8i6qNKhH
KxMR/JJU8h5a68R10F/i+mCK6eC3oL+skjg/L79Qvy9WpdEpJdzXAb+iUqb5
gJ9l8P2rKtmYXcrS7w+7plIF4aDTYchLUalg+IYtCaC/rlLr9rW2uwK/oVJe
KeMr44DfVEm5lfVzEeTdUmlxxEP7IOiTyvY4LWHsMdjfbbYfh6OBFzH/uKPS
2b9BiU9hz3e5nsxePXMi8Hs8X0pbvGop8PtsTxe9wkLgDw843n3cMdhKv6+O
4++rfX1aAX/E/vPlfUcF/B6rVOps3cWdoE+aSg9dHEolQv8nKm2xjjzwGPo/
5f5stXvCeODPVKr3s/cMfT3nc66vNgYlzkR/vlBp96/hU7Nh7+lsP7vDQssC
z1Ap1+nuhXr4/kuVol9YfOuI/nzF/ppoyp9/z68Zf+wf9Vi/H5ft+1s5/vx7
fsv+/B859H2n0l2b8vz59/ye6+cOga87oP0feH4xyII//54/cnu61G/9CPSf
VDIRPjf+CvpMrm/7ng1bCPwz5+uCB7O3As9i/ToMN6uqr//n8bK0yY9Af33l
ePby43YR+n1TyT9WapOir/9XadJS33svwS+H57spu9Xp+vp/nn95J3fQ34/n
cXyoln16J/T/rha/b/oH14t5u6z09a35XO+kOnc9p8//VXp2uvOm+/r8n8cn
f0LGGH39P88n+9w299HX/7N/R1FHff3dH27vevdDlYD/5fgUO3j8Ln39v1p8
fW8Rxwszq84d9PX/GnVI6DwvEeNXUqMrnyzyemF8S2m08WiVkAnAS2vUY5pV
K92/jDS67XgyuRD0xhpFNL1zTF/vbqLRy2HGFtHAy2jF77M21cjr+Jy0FH39
v0bnLT9IQ4CX02hNo3N/ZgA30yj9d78yueBnrtFH7apjWeDlNcqzm+wVoq//
16jP6M0rj+rr/zXau1kM1O8/rKgVv/+6kkZ9M0ud+oT+r8ztfxR3yUe//0+j
mV23GPz1+/80Gnhk6gn9fYalRode33pgq9//p9GuHpNiuwC30ijgSO76oRi/
6hot/Gp1UX9/UkOjNubTfXNBX5PbY2voUBbxw1ojuYdpXh39fmONJtw8bnsU
/Gpr5N9g+TEHfL+OVnx9Rl2Nnt8uz59/zzYa+d67mqavR62n0a2uvRt6A6+v
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
H8P+1uVtvr6fc6xErueXPxyO75fGcX1cG/GnWB4vUWCqnGGL76N8Jbq+fLq1
/v2rH8e3VfdMH0DfX6IWx1os0b9vmyDRw7ge7cbCXgDHv7Iu7/uCT5RoSljP
wx1x/SSJOjxzndgQ9iZL9HtQr6am+D4yUCL7Vb7idehPYflZp/HJ0J/Kchcz
U/376iCJViZEHfUFD+b5P7Kzszt4iERX7vUsZwEeKlH450+lM1G/aRy/ttp1
3ID6T5co6NLfHV7ozzBejwKcu9bCeMyQ6OmiT1X08xzD2d/qFLa5jPGcKdE3
xw/WkeCzJPo6+nEb/ffLZkv0ZUmG/SiUN0eiOpHGXRuCz+X5ffCNbQXweRL9
vXbT6gvk+Rwf35ys+RD1WyDR4wqbKl5F/SMkGtxybsmTaN9CiS72G/NFf367
iP11isurZeiPxRz/1jTLC0Z/LZHI8qhpug++31/K62M/e++64Mskys2y6GQM
vpz7e3yB5Uf9+b9Ezd6lfM/B84eVPF9m7bp3Ec8fIiWaXmZu8lE8/1ol0ZYo
z02b8HxstUSGWrYzF+F52xqOLyFrDrqAr5WoYJNHFWNcH8Xr3dbApKuwF831
W5q5fDXqs06i1Mnhsbo/xHC8CR1q1gk8lsdrVPsuv9Ef69k/vOvszYf+BuaD
jSrehP5G6d/n3XESHXpVe/sc8E3sT2GTfnUF38zjETPNqRn4Fu6fUa+lN7C3
ldfnxHIvb0N/G8fXfTsjN4Fvlyh2UVbCQvAdEt04tHJCT/B4ibwicie3Bt/J
+UvqrkGfMN67OD8K8Qg6A39I4HzKN79vPPhujjeGDZH674vtYX/N8hjcD3yv
RH3fV6hjB3v7eL4texTwA/qJEnVrcqnuE+jv5+vPHci4pj//l2j/sIRWUeAH
eT1oNEodjOsPSeQz/uYSS/jvYY4391z+lAA/ItHG/mK4vn/gqESbR3TvdxT6
xyQyu/f2xEbw4xJ1ru6xfzj4Cenf3w9K4vG/U7ef/n38SYmany6zoyrqe0qi
J8fOrNV/b+m0RMc87qedg/4Zzjf6jn2o78c/y/6YHWTdD/aSOR8b9mOPhf77
fxJZWX3wytL3//N6M7yVm6bv/5eo5ZiM2kv13//j+VF71LdA/ff/OD+8+ypj
iP77f9K/z580zrd3+c0rBW6QKLmTc8/XkM9JVPG/B7YVy+c535r057aA+l/g
+FYqd5v+/PaiRKZbBV/9+dkl1m8f1zIE/pXC+qnTC4fBny9zvGhZIage+BXO
jx2L6un7O65KNNe3S5mD+v5/Hu/aaj19fUqVaNTSMpu89P3/EjW5XOt2Xf33
/yT6kO3dU/99qBsS3dwbEJeK9t3k/KhDS5sY/ff/eH16UeLTMP33/zh/HpFf
h8AzJPqUftXNGtdnSuTpdjS0Euzdlv79Pb070r+/b3WX7z9i54/fDZ7F43k3
Y3Yk6n9PokY1rWNC0P5s7s8Rcw4MQ3/msL2sJ13rg99n/7M/2KMseC6vhxtD
XN9CzuP2fnXoo8eHB3w/5slZkP78n/3lzOWBCfrzf4ncqkcNXYl4+5jz+Rme
3sGIl0/4/uNO3ZFeiKdPOd7a5Y/pinj7jOPNhsO+VthPkc/t/zItwBT7JZ5L
5DDUKfAz5BcSVThdKjgH+ytesj8/Cu68E/wV53uHjrZcDv5aIqXP2Vr9wd9I
ZHtz6rf24AV8f1a6gvFP2H8r0bD4k30NqN87id7MCSiZCP5eonnD6p5dg/I+
cDywywicjvI+cn9ZLG80vHWx/Emi9u+c7nVvUyx/lijl2oc1zdoWy4VsL3Gv
s5ltsfxFIt+lzzvcgf5Xzs//1suSoP9NohqzvGYlQP87++unqNor2xXLP3h9
qDnV2B38J4/3nFYb7cB/8fqbW9CkTvti+bdE/fyf1XsC/SKOJ9Vz+u+HvT8S
nW504vRa8L+cbw1sVnYoeAmZtjZYtqo26ltSpqPfFqaVBC8l0/chHtOuoD9K
y1R+ztOdR6FfRqa6u2bcWA99I5naXjb5PRv2ysrUonz49u7gxjI9eX1sWjlc
X04m1/lzZr+DbCLTm/NVQk/DXnmZfoZG+G0FryBTucZvhy1EeaYyVf/vAdfF
ckWZrBandOuP/qokU/v//hXLZjL1eBrftGaHYtlcJo9Y01p/IVvINMp5VsV8
u2K5skxTPueXSO1YLFdhOe3H/HXgVbk/nqTbDsP11bh+T8fUrA971WXqEn4x
owx4DZnaOR66n4r6Wcp0/qO88AT0a8q0+0jhoZngtWRqdeVs11HgtWU6+2R2
ujPKqyNT96Iuvs1Rn7oyRbduvvID9OvJ9Oj1znJ3oV9fJttEyxUS9BvItGh8
tPEutK+hTI272FkHgDeSqf+mgDltcH1jmUo61C3zDfVrIpNbn5TeubBnJdPa
EUFR56DfVKbbUy3v7EN51jLVXniu1mrYayaTccSHyMHgzdmfrIcrDuA2PH43
Lr2va18st5DpfetPU/TxaSnT6r0N11yDfiuZbOoMPHwM+q1luhITkbreoVhu
I5O/yfHXszoVy21lKhPx0GS0Y7FsK9Our5WauzgVy+1k6jala6/mnYvl9jId
q+Ix/QP0O8ikxLpF3IG+Hfv3wy3Xt4F3lGl2wsiUheD2Mi3JfNOhN7gDt8d8
Xq3W4J1kMg3odvAL6uco0wWvhLk50HeSqYFlTKsE8M4y3fxwtWAZeBeZ5l8t
eXgyyusqU+uETpM9UP9uMuXNDrGx61Isk0z1Xc0v/IZ+d5kSujQIegz9Hhwf
tr9sdgDcWaaHHl+qh8Cei0wTmmjbhoL3lOnDtxWNHHG9q0yzUgftrwd7bjKV
iq/TunTXYrkX92fYi9Kp0O8tk127VxVjUV4fHt9js6aEg/fl/m1Z/vpwlNdP
Ju2rUX5j8P4yNV0/37Yc+ACWr62YdAvlucv0rtPhrE2ov4dMMXfuzxyL/hzI
/va1/uqe4IPYf6v7xjfH9YNlmmG/P6ki7A2RqcawgksfIQ+VKXlm2+w7sO8p
07VYa/cd4F48n080+OGP8obJVCGtUlYb2POW6UQVJ/4Uyz4yeQ2fsOob5OEy
FSXE+t1HeSNkWvfOt+se8JEypW6LMloBPkomo75i2mTUZ7RMXX88i3VH/4/h
+T4/foIl+FiOX6ZOQY9R3jie7yaB5pdQ3niZfhhtP7Ef+r7y/+1PBveTaeh/
/sD95f877xf2JsgU+p/tzN2K5QD5//5TsTyR48dTvgDyJJn+o365e7E8mdeH
vyUKo8ADOd5/dgmaBj5FptHPV7z27FEsT5Vpc3aan6NzsRzE/t/cx6E0eLBM
lYYe3vkccgivDz9qrT+G8kJl+nrFXZoJe9PYf+91qd4D9Z/O8obrPa3Aw2TK
SFt07h3aO0Omgm05wcnoj3CZ7jXYPXsr+Eye33smL5mP8mbxfGjWYe1YlDeb
59/h33EuqM8cLn/z1DaVwOfKdOBd2M8slDdPpnm3jH7sgr357O8BFi0CMT4L
ZJpUP+TVAPAImV7cuZVoi+sXyjR+dVv/qqjPIplWvmwf+wD6i2UaKyZ83o/y
lnD7b41ZvQp8qUx78utZTUV5y7i/6w6JdQBfzvFi+uMOpXH9Cpmu+pbfnw95
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
y+X1XpHcDHye+u95LfM5Xk/58fOGfv6fSnt+Ngg+Dh7B/n7HeOFi/fw/jjd7
m1X2A1+kUkqLyJuu+v5/lWyt72g19f3/PD8bNTj+/8//4/beaMyfYnmZSt67
mvCnWF6uUtNXFl0Xg69QKUho5u6H+L2Sxzd71Go3xPdIlXpVOfilOdaHVVz/
DiVWmWI9Wa3++37DGpU6J0zYfwL6a1Uy8a5tvwTlRam04Znhsj94tEpTFnZy
7QS+jvOdekkXK6A+MRxfJBtn/X2WWJUKvXafO67v/1cprbA2Ldb3/6sUt2bP
IT/wjRz/lrdy1s+ziuP8JcR+Vy3wTeyvPt3/6ucxb+Z8ydM74Sb0t6j0ctS4
kCTUb6tKzWKMjy0B36bSxEuHCzz1/f/sj7O6Xe4EvkMlo7cnr9fB9fHq//1H
+3eq/+733qVSc6oy/DT6M+E/8zP19ibsh96t0rd1O89NAt+j/ru/fK9KFjF9
tlaCvX0q1Yupv+KRvv+f/eFD+bcXoL9fpYQPJ+YlorwDPJ8r9OwzC/ygSkub
3quuvx90SKUZ3Sc/rYP2HVZpwog/x97p5/+pNCx83VyDfv6f+u/5UsdU+qtc
3xOmn/+n0jRq1dIb/IRKm0etuGcDnqSSYe7TJfr7HidVer6lq+0N/fw/7j9h
c168fv4f28sqXBmC+XxGpTftlxcM0c//4/nZ6Mps/bzLZM4frb+ULQ8uqLSt
ZaNY/fxjkfOrd49aatCXVDpco9unBNRHVunrE7dRenxQVOp21ONaT/38P5W+
jLXe2hxcU2n7+Ybffurn/6mUf3nuU/18zXPsn0vH/NLP2z/P4xXa0349+AWe
36Ntpunx4aJKp7X5G3vr+/85HzrXL1//PYEUjudmTUv+hXyZx3vE3zq3oH+F
8zuDQ/gpff8/j2eB2WL9/MZrfL3dqe8T9fP/eXyTVhU6gqexf93YsFTfH39d
pUVmwSEfIN/g9e9tTl39vKSbKt+fiT/2gt9SaU7e5jszUF66Sk5DZ51wQ/sy
1H/Pi8xk//bqaFUE+TbHxxl1P16H/h0ub2MZRT8v8a5Kbc+8WREEf8ji/r6T
MYT08/9U2vJFaGChn/+nknu1XQWPIedwvKpm5pEC/fuc/w4oYRoHnqtSj8DM
yDngeRz/4r91GKOf/6fSeZ8y6W3BH3I8rW4xpSSuf6TSjfS6Jvr5io9VGrrG
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
/z0xPi5ukn2L8wt4lr9N19Wcf3qhvY7xjBhQNh9K4A/RQ1PtqVvLwm/4KZ0K
1MHv9EydMjh/9paFz9mI3cFcH4DPuZ08s5B6H1l03Rqg0506OD6rpe1n+r/s
K4s6tR8uP1C2HpHAR3xtdqao/j8xHhT0vz+VOthgopNuAHUbWXxOSnMOpH3g
znnOM8xV/6BoL/W/rH3F9MG169u+ekf7+sui4ZgnEz5y/geL3FN/v7D8bDG+
bxtZTH+rEvhtiZKQRn0AxsfxUxaeYPmDT2T2nHWG9WMni+4Rj23nUgd/ONfV
aQH1gej/kyzqWlIHX8/Tt+pJfZAsrmK91Jf1D04deLr1T7Yfe1lsymq9uITt
D+zXxrbZSeqDZeF1suX6s9TBLsfjmgdRd8B66qjJ0U5sf+Buabvt3jH9IbIw
TW32II72gesm7/T1YP4dZaH0Dzurri/AMXFe/RtTH4r5V9f+chbbH9h+svmw
9Wxfw7D+Khm6fSN1cNzcrXWHUh8ui+zCvPWVWL9g/SlmVWTWn5Msej+dHTaf
9Que4Zrx24LrW2dZnHr7xbwHdbBXp73RRWwfI9CegkbpHWT7Ap86W2mWF/2v
jpSFZ4X0p03K1tsS2MBh2pAcrr9dsN6LaIRfmQ72zLnWykH1ryqLGk0XRVbg
/gWcML764irUXbE+bNcmT+H+ADy9uJ/NQu4fRstihMZjtyX3H+Buq4PLfeT+
Zwza76ioifRPLYFPlw61OKT6Z8V6oELWMm/q4NeLagf4UnfHeilQ71hL6uAx
Xj9/P+b+ZyzWezdavX/O9MFvRo8veU37PGThNLCz+W7q4NOWum5uqn9XWVSo
3nrOeOrg0E2OaZ4MP14W/V5OrzmN+QfLNbc3aEF9Ata73mbr2lAH3z15c2Ue
y2+iLBpXnR0ew/IFzznzovwu6pPkf/znSeC8odlLVX/Uk9FfUzf28GT9gW/v
STQwpu4piwZVzz0woQ6eV+AS95D+d71k8eDqa7+NtA+8duzjvjHUvWUx91Hh
H3V/CO7ZrvfL0dSnyOLyCY+P49i+wOYrZ0XVo+4ji5dm+WnG1METKzf62oLt
c6os2r/vFUr/2RL4582x+pvYPqfJ4vyRkE2OtB+8YcuOZnrMn68sxi7IPJBB
+8D/+Pf2Q3svV2lYCHXw+UGfViyh7i8L3/Gb8lfSPvDGsBGD+1EPkIV/as/T
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
dtTBgTFbyn3n99H9FdF12Nx7laiDJ6/pfKE+47dVRMv11kWXmD44P2Jgk3kM
PwDzyUbnwW35fTXYe4vH3AdM304R02MWjHnH+MGRtWa4/2b8AxVRrorlwmqM
H7wpuv2yM9QHYX3QznSDH8ODM041iWnM+O2x/tgQf6I9dXBQlO3xx7RvsCJa
DbZ+Xcj4wRMsw3N3UHdQxLZmN64Ppf3g+1XrySWMfwjGz+/jjybz+3DwkOeJ
CeP4fb6jIk6+P5nB98Ml8JxuB/c1pT4U46O0c91Nfn8PLrwcOTeU90eGKaJP
a79VG6iDrQdUnSKoD0f/7jxqnRN1cIVXE+5N4vf7TorYUW1sTC3qYCsL1wkK
03dWxO0xzqaBvF8A9pUc3zfn/YMRaI8Jg9Ju8/4DeOf1/sGLeT9iJOL72qdP
Z96fAN9p2LNCHu83uCjCc6BUo4j3G8CXd5vhV6aPUsQ1vRev0qiDY6uIzZOo
u8KeatsH1OL9F7CHZo5vC+qjFfHhabjBXaYPXtX16qB82jdGEQbNzu0qpv3g
8iem1avE/Lkpomp+bPRx6uDaNW828mZ4d6yP+pTbYcT4wa18LZrxPpDOWKzv
tnrtmU37wN3Ob2nZUn3PVRF9iy7vu8v7N+DMdNMP+er7rlgP3anpyftmEnjq
uz+5/Xm/azzac/k3Tl94vwxcu9HdS3t4v20Cxqcx53WOUgfPmzvZ9bz6HizW
r6sSrtHfkAR+lLx6whvaP0kRPwp99m+hDr7omeCURH2yIoyu2W4YTR18IvK/
CypluqciSneWa0l/MRI4uNbRRutYvl5YX+m/77yL7Qv8Yf7W/sOoeyviUIGt
SwnLHxww9rO3+r78FMwHBqXzMqmDrR8FSgHUfbD+mnNxn0Qd3PXspoJI9o+p
GP8iYx/aUAenjN5vMZL6NEU8eLCwvi518OkWF5cYqf5qMD5rvD3ov0YCO4zV
6z5L9V+jiNfpo/eHUwe7P7sQ3JW6P9YvepYDXzB+cL/2cUa876QToIgNC66H
x1MHf4+paj+C+nRFjDtlX6082x/4/IPlN1NZ/jOUf94Ll8AhE2K/zlT94Shi
9OsDB5tRB3cNOO2p+vMLRP8ovtJ4kXr/XxHvFuTeM1fv/yviQvl3ax6yfYF3
r/xpq773PRvzjVPrsFjqYMvkKh0d1Pd00d713z/8yfv3YPspN1Ykqu/rYj2o
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
mQ==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.600000000000006},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{None, {Pi}}, {None, {3.141592653589793}}],
  GridLinesStyle->Directive[
    RGBColor[1, 0, 0], 
    Thickness[Large]],
  ImageSize->{728.4999999999998, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10000.}, {2.6, 3.6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.87456112874678*^9, 3.874561175294431*^9}, 
   3.8745630031018133`*^9, 3.8745630351038647`*^9, 3.874563069698501*^9, {
   3.874563143064355*^9, 3.874563159764343*^9}, {3.874563195633077*^9, 
   3.874563201540307*^9}, 3.874563308580841*^9, {3.8745634452681627`*^9, 
   3.874563458587169*^9}, 3.874563532000971*^9, 3.874563661776718*^9, 
   3.874563767723532*^9, 3.874563946613798*^9, 3.8745641226739707`*^9, 
   3.874564283545815*^9, 3.8745643879463787`*^9, {3.8745644845676584`*^9, 
   3.874564518795553*^9}, 3.874564714489612*^9, {3.874564853716678*^9, 
   3.8745648793614445`*^9}, 3.8745650252005124`*^9, {3.874566334282567*^9, 
   3.874566358681119*^9}, 3.874646854045065*^9, {3.8746468975504637`*^9, 
   3.874646954856256*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"a7f8097f-cb32-4de7-979b-151b85fed15a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**"}], "*", 
   RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}]], "Input",Expres\
sionUUID->"82c56ec7-29ce-498e-a640-c1676731b97e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8743058548489933`*^9, 3.8743058579167643`*^9}, 
   3.874566932517913*^9, {3.8745669801982527`*^9, 
   3.874566981570948*^9}},ExpressionUUID->"e93d3ade-f347-4d96-9f33-\
cf123ec8039d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "#"}], "}"}], "&"}], "/@", 
         RowBox[{"SolveValues", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}], "==", "1"}], ",", "y"}], "]"}]}], "/.", 
        RowBox[{"x", "->", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}], ",", "300"}], 
      "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Axes", "->", "False"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.87456661608074*^9, 3.8745666164514666`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"9da6c435-13d9-4597-a125-96ccd7a5e180"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
zWlHYvg/1rRlZA==
     "]]}, {{}, {}}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{437.672727272728, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.9981867303179754, 0.9926499432296394}, {-0.9999971831415524,
    0.9999971831415524}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.874289326573991*^9, {3.874289366464527*^9, 3.874289369402001*^9}, {
   3.8743058589008102`*^9, 3.874305862542008*^9}, 3.874646824733986*^9, {
   3.874729590582322*^9, 3.874729594178444*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"f14bd762-097d-4f51-ae20-56dc1b2102e1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.874754424531371*^9},
 FontWeight->"Plain",ExpressionUUID->"2977e7b8-d18d-4d8b-89bf-a74a26dab3fe"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**"}], "*", 
   RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}]], "Input",Expres\
sionUUID->"9b219fca-b42a-46d5-ab8e-ada9519d1d4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L", ">", "0"}], ",", 
     RowBox[{"w", ">", "0"}], ",", 
     RowBox[{"0", "<", "\[Theta]", "<", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            FractionBox["4", 
             RowBox[{"w", " ", "\[Pi]"}]], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "x", " ", "<=", " ", 
             RowBox[{"w", "/", "2"}]}]}], "}"}], "}"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "*", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}], "/", "2"}]}], 
         "}"}]}], "]"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], "//", "FullSimplify"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.874748940380113*^9, 3.874748975450681*^9}, {
   3.87474903148178*^9, 3.8747490326701827`*^9}, {3.8747491051221423`*^9, 
   3.874749106020309*^9}, {3.874749359420151*^9, 3.874749360012374*^9}, {
   3.8747502111291447`*^9, 3.874750284672092*^9}, {3.8747503285901623`*^9, 
   3.874750379734242*^9}, {3.874750415868861*^9, 3.874750524732653*^9}, {
   3.874750795199805*^9, 3.874750802203949*^9}, 3.874751221893939*^9, {
   3.874752156888508*^9, 3.874752161386111*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2d8463d0-8f8e-4be0-becb-e644934b142d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"2", " ", "L"}], 
         RowBox[{"\[Pi]", " ", "w"}]], 
        RowBox[{"L", "\[LessEqual]", "w"}]},
       {
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"L", "-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"L", "-", "w"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"L", "+", "w"}], ")"}]}]], "+", 
            RowBox[{"w", " ", 
             RowBox[{"ArcCos", "[", 
              FractionBox["w", "L"], "]"}]}]}], ")"}]}], 
         RowBox[{"\[Pi]", " ", "w"}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.8747540701206474`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ce4a42c5-178a-49e9-a89b-b30c0352d62d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**"}], "*", 
   RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}]], "Input",Expres\
sionUUID->"2f466663-dbc8-4098-bf5c-d1ff0140d446"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ReplaceAll", "[", 
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox[
             RowBox[{"2", " ", "l"}], 
             RowBox[{"\[Pi]", " ", "w"}]], 
            RowBox[{"l", "\[LessEqual]", "w"}]},
           {
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"l", "-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"l", "-", "w"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"l", "+", "w"}], ")"}]}]], "+", 
                RowBox[{"w", " ", 
                 RowBox[{"ArcCos", "[", 
                  FractionBox["w", "l"], "]"}]}]}], ")"}]}], 
             RowBox[{"\[Pi]", " ", "w"}]], 
            RowBox[{"l", ">", "w"}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}},
          Selectable->True]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False,
      StripWrapperBoxes->True], ",", 
     RowBox[{"{", 
      RowBox[{"w", "->", 
       RowBox[{"l", "/", "z"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"z", ">", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.874750839443945*^9, 3.8747508666516466`*^9}, {
  3.874750901589778*^9, 3.8747509017302337`*^9}, {3.8747517375296717`*^9, 
  3.8747517456121907`*^9}, {3.874751918133112*^9, 3.874751962762074*^9}, {
  3.874752975609715*^9, 3.87475299784921*^9}},
 CellLabel->"",ExpressionUUID->"a20b99f5-f906-4c69-804d-cd95a82c24e7"],

Cell[BoxData["\<\"\\!\\(\\*TagBox[GridBox[{{\\\"\[Piecewise]\\\", \
GridBox[{{FractionBox[RowBox[{\\\"2\\\", \\\" \\\", \\\"z\\\"}], \
\\\"\[Pi]\\\"], RowBox[{\\\"z\\\", \\\"\[LessEqual]\\\", \
\\\"1\\\"}]},{FractionBox[RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"z\\\", \\\"-\\\", SqrtBox[RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\"+\\\", SuperscriptBox[\\\"z\\\", \\\"2\\\"]}]], \\\"+\\\", \
RowBox[{\\\"ArcSec\\\", \\\"[\\\", \\\"z\\\", \\\"]\\\"}]}], \\\")\\\"}]}], \
\\\"\[Pi]\\\"], RowBox[{\\\"z\\\", \\\">\\\", \\\"1\\\"}]}\\n     \
},AllowedDimensions->{2, \
Automatic},Editable->True,GridBoxAlignment->{\\\"Columns\\\" -> {{Left}}, \
\\\"Rows\\\" -> {{Baseline}}},GridBoxItemSize->{\\\"Columns\\\" -> \
{{Automatic}}, \\\"Rows\\\" -> {{1.}}},GridBoxSpacings->{\\\"Columns\\\" -> \
{Offset[0.27999999999999997`], {Offset[0.84]}, Offset[0.27999999999999997`]}, \
\\\"Rows\\\" -> {Offset[0.2], {Offset[0.4]}, Offset[0.2]}},Selectable->True]}\
\\n  },GridBoxAlignment->{\\\"Columns\\\" -> {{Left}}, \\\"Rows\\\" -> \
{{Baseline}}},GridBoxItemSize->{\\\"Columns\\\" -> {{Automatic}}, \
\\\"Rows\\\" -> {{1.}}},GridBoxSpacings->{\\\"Columns\\\" -> \
{Offset[0.27999999999999997`], {Offset[0.35]}, Offset[0.27999999999999997`]}, \
\\\"Rows\\\" -> {Offset[0.2], {Offset[0.4]}, \
Offset[0.2]}}],\\\"Piecewise\\\",DeleteWithContents->True,Editable->False,\
SelectWithContents->True,Selectable->False,StripWrapperBoxes->True]\\)\"\>"], \
"Output",
 CellChangeTimes->{3.874752950646674*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"ea16924a-6c49-45c9-8030-ec0916c3f75a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**"}], "*", 
   RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}]], "Input",Expres\
sionUUID->"9d818092-df1b-4c7d-aa08-318cf1ac94ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"2", " ", "z"}], "\[Pi]"], 
          RowBox[{"z", "<=", "1"}]},
         {
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"z", "-", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["z", "2"]}]], "+", 
              RowBox[{"ArcSec", "[", "z", "]"}]}], ")"}]}], "\[Pi]"], 
          RowBox[{"z", ">", "1"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", "Thick"}], "]"}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Dashed", ",", "Red", ",", "Thick"}], "]"}]}], "}"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.1"}], "}"}]}], ",", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "14"}], "]"}], ",", "Automatic"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.874751007701749*^9, 3.87475115619808*^9}, {
  3.8747512398561387`*^9, 3.874751279345865*^9}, {3.874751396252201*^9, 
  3.874751568090668*^9}, {3.874753231208041*^9, 3.874753276934843*^9}, {
  3.874753307923912*^9, 3.87475333132244*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0f8218d1-bb1d-4d80-917a-bb7cc9697531"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAnX5iBjFkiz4SDcyJGXCBPsTTIExX
IGk/4iPsMun9Xz//xr6DICB5P7L8hXKj/W8/ncCNHwUgiT8a6VKSgP1/P2w9
dW33H5k/T185Im/9jz/T+2iU8B+pP2iaLGpm/Z8/B9viJ+0fuT/2NyYOYv2v
P6HKn3HrH8k/vAYj4F/9vz+ur4nbbC7aP1JS2HvlqtA/Zz/Rmexy4z9t2lD7
XMPYP27lKeO0ruk/+PIolZZZ4D/gXtkIwcnpP0WEtaHOauA/U9iILs3k6T+T
FUKuBnzgPzjL53nlGuo/Ljhbx3ae4D8DsaUQFofqP2R9jflW4+A/mHwhPndf
6z/QB/JdF23hP8ETGZk5EO0/qRy7JpiA4j80jci+RSvtP/atRzPQkeI/pgZ4
5FFG7T9DP9Q/CKPiP4z51i9qfO0/32HtWHjF4j9W35TGmujtPxWnH4tYCuM/
6qoQ9PvA7j+BMYTvGJTjP1wkwBkI3O4/zsIQ/FCl4z/PnW8/FPfuPxxUnQiJ
tuM/tJDOiiwt7z+2drYh+djjP392jCFdme8/7bvoU9kd5D/y7ztHabTvPztN
dWARL+Q/ZGnrbHXP7z+I3gFtSUDkPzkFL6fg5e8/ptquIY9O5D+tS+6+
       "]], LineBox[CompressedData["
1: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
k0D0wJDvbkan9BIB/wOuPi1Q
       "]]},
     Annotation[#, "Charting`Private`Tag$20369#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{{1, 
      Directive[
       RGBColor[0, 0, 1], 
       Thickness[Large]]}}, {{1, 
      Directive[
       Dashing[{Small, Small}], 
       RGBColor[1, 0, 0], 
       Thickness[Large]]}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999795918367}, {0., 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {13, 
      FormBox["13", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.874754099753041*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"116882c9-4ca9-4d6e-808a-84e34d04d670"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**"}], "*", 
   RowBox[{"**", "**", "**", "**", "**", "**"}]}], "*****)"}]], "Input",Expres\
sionUUID->"872d445a-7ffe-4390-9557-ebbc8c4ea1cf"],

Cell[BoxData[
 RowBox[{"Buffon", "[", 
  RowBox[{
   TagBox[
    FrameBox["NumberOfNeedles"],
    "Placeholder"], ",", 
   TagBox[
    FrameBox["NeedleSize"],
    "Placeholder"], ",", 
   TagBox[
    FrameBox["SurfaceDimension"],
    "Placeholder"], ",", 
   TagBox[
    FrameBox["GridWidth"],
    "Placeholder"], ",", 
   TagBox[
    FrameBox[
     RowBox[{"Options_Show", "_True", "_Parallelize"}]],
    "Placeholder"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8747543761421795`*^9, 
  3.874754378150666*^9}},ExpressionUUID->"9d92364f-a4e7-46da-8b81-\
5bcd08b8b267"],

Cell[BoxData[
 RowBox[{"Buffon", "[", 
  RowBox[{"30", ",", "2", ",", "25", ",", "3", ",", 
   RowBox[{"Show", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.874652049708545*^9, 3.874652093701673*^9}, 
   3.8746522068215075`*^9, {3.874652376552772*^9, 3.874652388282307*^9}, {
   3.874652549598496*^9, 3.8746525499842606`*^9}, {3.8746526200289626`*^9, 
   3.874652624199951*^9}, {3.8747293159724755`*^9, 3.874729317397235*^9}, {
   3.874731935749277*^9, 3.87473197002355*^9}, {3.874732020540551*^9, 
   3.8747320208114247`*^9}, {3.874732068908146*^9, 3.8747320742246065`*^9}, {
   3.874732138700272*^9, 3.8747321445846024`*^9}, {3.874732310629205*^9, 
   3.874732317088876*^9}, {3.8747386797690325`*^9, 3.8747387190422707`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"4118f61f-c0e9-42ba-95cf-768cb188efce"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Buffon", "[", 
   RowBox[{"10000", ",", "2", ",", "25", ",", "3", ",", 
    RowBox[{"Show", "->", "Parallelize"}]}], "]"}],
  FontColor->GrayLevel[0]]], "Input",
 CellChangeTimes->{
  3.874652605974309*^9, {3.8747321473092966`*^9, 3.8747321496560698`*^9}, {
   3.874732877585018*^9, 3.874732883327093*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"f60a4865-9376-44aa-a2a7-021b19cf779f"]
},
WindowSize->{1908., 1035.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3f941d82-97aa-4de7-bb4b-e900f4ac09ee"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1614, 27, 433, "Text",ExpressionUUID->"c3db90d2-148d-488a-ab73-d5ab84690e11"],
Cell[2175, 49, 1452, 29, 195, "Input",ExpressionUUID->"85e3c223-e183-4234-973c-de12eb3c0501"],
Cell[CellGroupData[{
Cell[3652, 82, 455, 7, 70, "Input",ExpressionUUID->"cb867dc0-17e6-4467-a61a-0b9e922b42c9"],
Cell[4110, 91, 471, 8, 36, "Print",ExpressionUUID->"853b9ad2-4f6a-4f11-bee2-924a5c83ef31"]
}, Open  ]],
Cell[4596, 102, 2238, 68, 78, "Input",ExpressionUUID->"8abc5cf6-bbbe-4b34-ae89-c3ac4288217b"],
Cell[6837, 172, 71059, 1347, 7836, "Input",ExpressionUUID->"0ee97faa-d207-40ca-9203-2e2c49bb043c"],
Cell[77899, 1521, 154, 3, 28, "Input",ExpressionUUID->"43a591c1-f414-4e74-aeaa-e59ebf6a4d3b"],
Cell[CellGroupData[{
Cell[78078, 1528, 1093, 26, 48, "Input",ExpressionUUID->"ad582789-abd8-4a25-91ef-ad0266d696af"],
Cell[79174, 1556, 3279, 56, 339, "Output",ExpressionUUID->"b3dd67c4-b2fe-4bae-af45-15cc57cde71d"]
}, Open  ]],
Cell[82468, 1615, 472, 9, 28, "Input",ExpressionUUID->"ae83b453-e083-45f0-9a4b-e1dc6e9986cf"],
Cell[82943, 1626, 2086, 54, 159, "Input",ExpressionUUID->"681aacc6-48aa-4da1-8027-60524be72249"],
Cell[CellGroupData[{
Cell[85054, 1684, 860, 12, 27, "Input",ExpressionUUID->"97c216db-86d8-46a2-8632-5ea311414101"],
Cell[85917, 1698, 124009, 2048, 484, "Output",ExpressionUUID->"a7f8097f-cb32-4de7-979b-151b85fed15a"]
}, Open  ]],
Cell[209941, 3749, 472, 9, 27, "Input",ExpressionUUID->"82c56ec7-29ce-498e-a640-c1676731b97e"],
Cell[210416, 3760, 231, 4, 27, "Input",ExpressionUUID->"e93d3ade-f347-4d96-9f33-cf123ec8039d"],
Cell[CellGroupData[{
Cell[210672, 3768, 975, 27, 31, "Input",ExpressionUUID->"9da6c435-13d9-4597-a125-96ccd7a5e180"],
Cell[211650, 3797, 8574, 157, 485, "Output",ExpressionUUID->"f14bd762-097d-4f51-ae20-56dc1b2102e1"]
}, Open  ]],
Cell[220239, 3957, 145, 2, 27, "Input",ExpressionUUID->"2977e7b8-d18d-4d8b-89bf-a74a26dab3fe"],
Cell[220387, 3961, 472, 9, 27, "Input",ExpressionUUID->"9b219fca-b42a-46d5-ab8e-ada9519d1d4a"],
Cell[CellGroupData[{
Cell[220884, 3974, 1655, 40, 45, "Input",ExpressionUUID->"2d8463d0-8f8e-4be0-becb-e644934b142d"],
Cell[222542, 4016, 1889, 56, 70, "Output",ExpressionUUID->"ce4a42c5-178a-49e9-a89b-b30c0352d62d"]
}, Open  ]],
Cell[224446, 4075, 472, 9, 27, "Input",ExpressionUUID->"2f466663-dbc8-4098-bf5c-d1ff0140d446"],
Cell[CellGroupData[{
Cell[224943, 4088, 2494, 65, 70, "Input",ExpressionUUID->"a20b99f5-f906-4c69-804d-cd95a82c24e7"],
Cell[227440, 4155, 1588, 23, 72, "Output",ExpressionUUID->"ea16924a-6c49-45c9-8030-ec0916c3f75a"]
}, Open  ]],
Cell[229043, 4181, 472, 9, 27, "Input",ExpressionUUID->"9d818092-df1b-4c7d-aa08-318cf1ac94ff"],
Cell[CellGroupData[{
Cell[229540, 4194, 2766, 78, 103, "Input",ExpressionUUID->"0f8218d1-bb1d-4d80-917a-bb7cc9697531"],
Cell[232309, 4274, 6010, 125, 247, "Output",ExpressionUUID->"116882c9-4ca9-4d6e-808a-84e34d04d670"]
}, Open  ]],
Cell[238334, 4402, 472, 9, 27, "Input",ExpressionUUID->"872d445a-7ffe-4390-9557-ebbc8c4ea1cf"],
Cell[238809, 4413, 568, 21, 31, "Input",ExpressionUUID->"9d92364f-a4e7-46da-8b81-5bcd08b8b267"],
Cell[239380, 4436, 817, 12, 27, "Input",ExpressionUUID->"4118f61f-c0e9-42ba-95cf-768cb188efce"],
Cell[240200, 4450, 421, 9, 27, "Input",ExpressionUUID->"f60a4865-9376-44aa-a2a7-021b19cf779f"]
}
]
*)

